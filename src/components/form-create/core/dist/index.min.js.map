{"version":3,"file":"index.min.js","sources":["../../utils/lib/modify.js","../../utils/lib/extend.js","../src/components/formCreate.js","../../utils/lib/type.js","../../utils/lib/mergeprops.js","../src/frame/attrs.js","../../utils/lib/console.js","../../utils/lib/deepextend.js","../../utils/lib/json.js","../src/frame/util.js","../../utils/lib/toarray.js","../../utils/lib/tostring.js","../../utils/lib/toline.js","../../utils/lib/unique.js","../../utils/lib/deepset.js","../src/factory/creator.js","../src/factory/maker.js","../src/frame/api.js","../src/render/cache.js","../../utils/lib/tocase.js","../src/render/render.js","../src/render/index.js","../src/handler/inject.js","../src/handler/page.js","../src/handler/render.js","../src/factory/context.js","../src/handler/loader.js","../src/handler/input.js","../src/factory/parser.js","../src/handler/context.js","../src/handler/lifecycle.js","../src/handler/effect.js","../src/handler/index.js","../src/frame/fetch.js","../src/components/fragment.js","../src/factory/node.js","../src/factory/manager.js","../src/frame/provider.js","../src/frame/index.js"],"sourcesContent":["import Vue from 'vue';\n\nexport function $set(target, field, value) {\n    Vue.set(target, field, value);\n}\n\nexport function $del(target, field) {\n    Vue.delete(target, field);\n}\n","import {$set} from './modify';\n\nconst _extends = Object.assign || function (a) {\n    for (let b, c = 1; c < arguments.length; c++) {\n        for (let d in b = arguments[c], b) {\n            Object.prototype.hasOwnProperty.call(b, d) && ($set(a, d, b[d]));\n        }\n    }\n\n    return a;\n}\n\nexport default function extend() {\n    return _extends.apply(this, arguments);\n}\n\nexport function copy(obj) {\n    if (typeof obj !== 'object' || obj === null) return obj;\n    return obj instanceof Array ? [...obj] : {...obj};\n}\n","import extend from '@form-create/utils/lib/extend';\n\nconst NAME = 'FormCreate';\n\nexport default function $FormCreate(FormCreate) {\n    return {\n        name: NAME,\n        componentName: NAME,\n        model: {\n            prop: 'api'\n        },\n        provide() {\n            return {\n                $pfc: this,\n            }\n        },\n        inject: {$pfc: {default: null}},\n        props: {\n            rule: {\n                type: Array,\n                required: true\n            },\n            option: {\n                type: Object,\n                default: () => {\n                    return {};\n                }\n            },\n            extendOption: Boolean,\n            value: Object,\n            api: Object,\n        },\n        data() {\n            return {\n                formData: undefined,\n                destroyed: false,\n                validate: {},\n                $f: undefined,\n                isShow: true,\n                unique: 1,\n                renderRule: [...this.rule || []],\n                ctxInject: {},\n                updateValue: ''\n            };\n        },\n        render() {\n            return this.formCreate.render();\n        },\n        methods: {\n            _refresh() {\n                ++this.unique;\n            },\n            _renderRule() {\n                this.renderRule = [...this.rule || []];\n            },\n            _updateValue(value) {\n                if (this.destroyed) return;\n                this.updateValue = JSON.stringify(value);\n                this.$emit('update:value', value);\n            }\n        },\n        watch: {\n            value: {\n                handler(n) {\n                    if (JSON.stringify(n) === this.updateValue) return;\n                    this.$f.setValue(n);\n                },\n                deep: true\n            },\n            option: {\n                handler(n) {\n                    this.formCreate.initOptions(n);\n                    this.$f.refresh();\n                },\n                deep: true\n            },\n            rule(n) {\n                if (n.length === this.renderRule.length && n.every(v => this.renderRule.indexOf(v) > -1)) return;\n                this.formCreate.$handle.reloadRule(n);\n                this._renderRule();\n            }\n        },\n        beforeCreate() {\n            const {rule, option} = this.$options.propsData;\n            this.formCreate = new FormCreate(this, rule, option);\n            Object.keys(this.formCreate.prop).forEach(k => {\n                extend(this.$options[k], this.formCreate.prop[k]);\n            })\n            this.$emit('beforeCreate', this.formCreate.api());\n        },\n    }\n}\n","const is = {\n    type(arg, type) {\n        return Object.prototype.toString.call(arg) === '[object ' + type + ']'\n    },\n    Undef(v) {\n        return v === undefined || v === null\n    },\n    Element(arg) {\n        return typeof arg === 'object' && arg !== null && arg.nodeType === 1 && !is.Object(arg)\n    },\n    trueArray(data) {\n        return Array.isArray(data) && data.length > 0;\n    }\n};\n\n['Date', 'Object', 'Function', 'String', 'Boolean', 'Array', 'Number'].forEach(t => {\n    is[t] = function (arg) {\n        return is.type(arg, t);\n    }\n})\n\nexport function hasProperty(rule, k) {\n    return ({}).hasOwnProperty.call(rule, k)\n}\n\nexport default is;\n","export const normalMerge = ['attrs', 'props', 'domProps', 'scopedSlots'];\nexport const toArrayMerge = ['class', 'style', 'directives'];\nexport const functionalMerge = ['on', 'nativeOn'];\n\nconst mergeProps = (objects, initial = {}, opt = {}) => {\n    const _normalMerge = [...normalMerge, ...opt['normal'] || []];\n    const _toArrayMerge = [...toArrayMerge, ...opt['array'] || []];\n    const _functionalMerge = [...functionalMerge, ...opt['functional'] || []];\n    const propsMerge = opt['props'] || [];\n\n    return objects.reduce((a, b) => {\n        for (const key in b) {\n            if (a[key]) {\n                if (propsMerge.indexOf(key) > -1) {\n                    a[key] = mergeProps([b[key]], a[key]);\n                } else if (_normalMerge.indexOf(key) > -1) {\n                    a[key] = {...a[key], ...b[key]}\n                } else if (_toArrayMerge.indexOf(key) > -1) {\n                    const arrA = a[key] instanceof Array ? a[key] : [a[key]];\n                    const arrB = b[key] instanceof Array ? b[key] : [b[key]];\n                    a[key] = [...arrA, ...arrB]\n                } else if (_functionalMerge.indexOf(key) > -1) {\n                    for (const event in b[key]) {\n                        if (a[key][event]) {\n                            const arrA = a[key][event] instanceof Array ? a[key][event] : [a[key][event]];\n                            const arrB = b[key][event] instanceof Array ? b[key][event] : [b[key][event]];\n                            a[key][event] = [...arrA, ...arrB]\n                        } else {\n                            a[key][event] = b[key][event]\n                        }\n                    }\n                } else if (key === 'hook') {\n                    for (let hook in b[key]) {\n                        if (a[key][hook]) {\n                            a[key][hook] = mergeFn(a[key][hook], b[key][hook])\n                        } else {\n                            a[key][hook] = b[key][hook]\n                        }\n                    }\n                } else {\n                    a[key] = b[key]\n                }\n            } else {\n                if (_normalMerge.indexOf(key) > -1 || _functionalMerge.indexOf(key) > -1 || propsMerge.indexOf(key) > -1) {\n                    a[key] = {...b[key]}\n                } else if (_toArrayMerge.indexOf(key) > -1) {\n                    a[key] = b[key] instanceof Array ? [...b[key]] : (typeof b[key] === 'object' ? {...b[key]} : b[key]);\n                } else\n                    a[key] = b[key];\n            }\n        }\n        return a\n    }, initial);\n}\n\nconst mergeFn = (fn1, fn2) =>\n    function () {\n        fn1 && fn1.apply(this, arguments);\n        fn2 && fn2.apply(this, arguments);\n    };\n\nexport default mergeProps;\n","import {functionalMerge, normalMerge, toArrayMerge} from '@form-create/utils/lib/mergeprops';\n\n\nexport const keyAttrs = ['type', 'slot', 'emitPrefix', 'value', 'name', 'native', 'hidden', 'display', 'inject', 'options', 'emit', 'nativeEmit', 'link', 'prefix', 'suffix', 'update', 'sync', 'optionsTo', 'key'];\n\nexport const arrayAttrs = ['validate', 'children', 'control'];\n\nexport const normalAttrs = ['effect', 'deep'];\n\nexport function attrs() {\n    return [...keyAttrs, ...normalMerge, ...toArrayMerge, ...functionalMerge, ...arrayAttrs, ...normalAttrs];\n}\n","export function format(type, msg, rule) {\n    return (`[form-create ${type}]: ${msg}` + (rule ? ('\\n\\nrule: ' + JSON.stringify(rule.getRule ? rule.getRule() : rule)) : ''))\n}\n\nexport function tip(msg, rule) {\n    console.warn(format('tip', msg, rule));\n}\n\nexport function err(msg, rule) {\n    console.error(format('err', msg, rule));\n}\n\nexport function logError(e) {\n    err(e.toString());\n    console.error(e);\n}\n","import {$set} from './modify';\nimport is from './type';\n\nexport default function deepExtend(origin, target = {}, mode) {\n    let isArr = false;\n    for (let key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n            let clone = target[key];\n            if ((isArr = Array.isArray(clone)) || is.Object(clone)) {\n                let nst = origin[key] === undefined;\n                if (isArr) {\n                    isArr = false;\n                    nst && $set(origin, key, []);\n                } else if (clone._clone && mode !== undefined) {\n                    if (mode) {\n                        clone = clone.getRule();\n                        nst && $set(origin, key, {});\n                    } else {\n                        $set(origin, key, clone._clone());\n                        continue;\n                    }\n                } else {\n                    nst && $set(origin, key, {});\n                }\n                origin[key] = deepExtend(origin[key], clone, mode);\n            } else {\n                $set(origin, key, clone);\n                if (!is.Undef(clone)) {\n                    if (clone.__json !== undefined) {\n                        origin[key].__json = clone.__json;\n                    }\n                    if (clone.__origin !== undefined) {\n                        origin[key].__origin = clone.__origin;\n                    }\n                }\n            }\n        }\n    }\n    return (mode !== undefined && Array.isArray(origin)) ? origin.filter(v => !v || !v.__ctrl) : origin\n}\n\nexport function deepCopy(value) {\n    return deepExtend({}, {value}).value;\n}\n\nexport function deepExtendArgs(origin, ...lst) {\n    lst.forEach(target => {\n        origin = deepExtend(origin, target);\n    });\n    return origin;\n}\n","import deepExtend from './deepextend';\nimport {err} from './console';\nimport is, {hasProperty} from './type';\n\nconst PREFIX = '[[FORM-CREATE-PREFIX-';\nconst SUFFIX = '-FORM-CREATE-SUFFIX]]';\n\nconst $T = '$FN:';\nconst $TX = '$FNX:';\nconst FUNCTION = 'function';\n\nexport function toJson(obj, space) {\n    return JSON.stringify(deepExtend([], obj, true), function (key, val) {\n        if (val && val._isVue === true)\n            return undefined;\n\n        if (typeof val !== FUNCTION) {\n            return val;\n        }\n        if (hasProperty(val, '__json')) {\n            return val.__json;\n        }\n        if (val.__origin)\n            val = val.__origin;\n\n        if (val.__emit)\n            return undefined;\n        return PREFIX + val + SUFFIX;\n    }, space);\n}\n\nfunction makeFn(fn) {\n    return eval('(' + FUNCTION + '(){return ' + fn + ' })()')\n}\n\nexport function parseFn(fn, mode) {\n    if (fn && is.String(fn) && fn.length > 4) {\n        let v = fn.trim();\n        let flag = false;\n        try {\n            if (v.indexOf(SUFFIX) > 0 && v.indexOf(PREFIX) === 0) {\n                v = v.replace(SUFFIX, '').replace(PREFIX, '');\n                flag = true;\n            } else if (v.indexOf($T) === 0) {\n                v = v.replace($T, '');\n                flag = true;\n            } else if (v.indexOf($TX) === 0) {\n                v = makeFn('function($inject){' + v.replace($TX, '') + '}');\n                v.__json = fn;\n                v.__inject = true;\n                return v;\n            } else if (!mode && v.indexOf(FUNCTION) === 0 && v !== FUNCTION) {\n                flag = true;\n            }\n            if (!flag) return fn;\n            const val = makeFn((v.indexOf(FUNCTION) === -1 && v.indexOf('(') !== 0) ? (FUNCTION + ' ' + v) : v);\n            val.__json = fn;\n            return val;\n        } catch (e) {\n            err(`解析失败:${v}\\n\\nerr: ${e}`);\n            return undefined;\n        }\n    }\n    return fn;\n}\n\nexport function parseJson(json, mode) {\n    return JSON.parse(json, function (k, v) {\n        if (is.Undef(v) || !v.indexOf) return v;\n        return parseFn(v, mode);\n    });\n}\n","import is from '@form-create/utils/lib/type';\nimport mergeProps from '@form-create/utils/lib/mergeprops';\nimport {arrayAttrs, normalAttrs} from './attrs';\nimport {logError} from '@form-create/utils/lib/console';\nimport {parseJson, toJson} from '@form-create/utils/lib/json';\nimport deepExtend from '@form-create/utils/lib/deepextend';\n\nexport {parseFn} from '@form-create/utils/lib/json';\nexport {parseJson, toJson}\n\nexport function enumerable(value, writable) {\n    return {\n        value,\n        enumerable: false,\n        configurable: false,\n        writable: !!writable\n    }\n}\n\n//todo 优化位置\nexport function copyRule(rule) {\n    return copyRules([rule])[0];\n}\n\nexport function copyRules(rules, mode) {\n    return deepExtend([], [...rules], mode || false);\n}\n\nexport function mergeRule(rule, merge) {\n    mergeProps(Array.isArray(merge) ? merge : [merge], rule, {array: arrayAttrs, normal: normalAttrs});\n    return rule;\n}\n\nexport function getRule(rule) {\n    return is.Function(rule.getRule) ? rule.getRule() : rule;\n}\n\nexport function mergeGlobal(target, merge) {\n    if (!target) return merge;\n    Object.keys(merge || {}).forEach((k) => {\n        if (merge[k]) {\n            target[k] = mergeRule(target[k] || {}, merge[k])\n        }\n    });\n    return target;\n}\n\nexport function funcProxy(that, proxy) {\n    Object.defineProperties(that, Object.keys(proxy).reduce((initial, k) => {\n        initial[k] = {\n            get() {\n                return proxy[k]();\n            }\n        }\n        return initial;\n    }, {}))\n}\n\nexport function byCtx(rule) {\n    return rule.__fc__ || (rule.__origin__ ? rule.__origin__.__fc__ : null)\n}\n\nexport function invoke(fn, def) {\n    try {\n        def = fn()\n    } catch (e) {\n        logError(e);\n    }\n    return def;\n}\n","export default function toArray(value) {\n    return Array.isArray(value)\n        ? value\n        : ([null, undefined, ''].indexOf(value) > -1 ? [] : [value]);\n}\n","export default function toString(val) {\n    return val == null\n        ? ''\n        : typeof val === 'object'\n            ? JSON.stringify(val, null, 2)\n            : String(val)\n}\n","export default function toLine(name) {\n    let line = name.replace(/([A-Z])/g, '-$1').toLocaleLowerCase();\n    if (line.indexOf('-') === 0)\n        line = line.substr(1);\n    return line;\n}\n","let id = 0;\n\nexport default function uniqueId() {\n    return Math.random().toString(36).substr(3, 3) + Number(`${Date.now()}${++id}`).toString(36);\n}\n","export default function deepSet(data, idx, val) {\n    let _data = data, to;\n    (idx || '').split('.').forEach(v => {\n        if (to) {\n            if (!_data[to] || typeof _data[to] != 'object') {\n                _data[to] = {}\n            }\n            _data = _data[to];\n        }\n        to = v;\n    })\n    _data[to] = val;\n    return _data;\n}\n","import extend from '@form-create/utils/lib/extend';\nimport is from '@form-create/utils/lib/type';\nimport {attrs} from '../frame/attrs';\nimport {copyRule, mergeRule} from '../frame/util';\nimport {$set} from '@form-create/utils/lib';\n\nexport function baseRule() {\n    return {\n        props: {},\n        on: {},\n        options: [],\n        children: [],\n        hidden: false,\n        display: true,\n        value: undefined,\n    };\n}\n\nexport function creatorFactory(name, init) {\n    return (title, field, value, props = {}) => {\n        const maker = new Creator(name, title, field, value, props);\n        if (init) {\n            if (is.Function(init)) init(maker);\n            else maker.props(init);\n        }\n        return maker;\n    };\n}\n\nexport default function Creator(type, title, field, value, props) {\n    this._data = extend(baseRule(), {type, title, field, value, props: props || {}});\n    this.event = this.on;\n}\n\nextend(Creator.prototype, {\n    getRule() {\n        return this._data;\n    },\n    setProp(key, value) {\n        $set(this._data, key, value);\n        return this;\n    },\n    _clone() {\n        const clone = new this.constructor();\n        clone._data = copyRule(this._data);\n        return clone;\n    },\n})\n\nexport function appendProto(attrs) {\n    attrs.forEach(name => {\n        Creator.prototype[name] = function (key) {\n            mergeRule(this._data, {[name]: arguments.length < 2 ? key : {[key]: arguments[1]}})\n            return this;\n        };\n    });\n}\n\nappendProto(attrs());\n","import {creatorFactory} from './creator';\n\nconst commonMaker = creatorFactory('');\n\nexport function create(type, field, title) {\n    let make = commonMaker('', field);\n    make._data.type = type;\n    make._data.title = title;\n    return make;\n}\n\nexport function createTmp(template, vm, field, title) {\n    let make = commonMaker('', field);\n    make._data.type = 'template';\n    make._data.template = template;\n    make._data.title = title;\n    make._data.vm = vm;\n    return make;\n}\n\nexport default function makerFactory() {\n    return {\n        create,\n        createTmp,\n        template: createTmp,\n        factory: creatorFactory\n    };\n}\n","import {byCtx, invoke, mergeRule, toJson} from './util';\nimport {$set} from '@form-create/utils/lib/modify';\nimport {deepCopy} from '@form-create/utils/lib/deepextend';\nimport is, {hasProperty} from '@form-create/utils/lib/type';\nimport extend from '@form-create/utils/lib/extend';\nimport {format} from '@form-create/utils/lib/console';\n\n\nfunction copy(value) {\n    return deepCopy(value);\n}\n\nexport default function Api(h) {\n\n    function tidyFields(fields) {\n        if (is.Undef(fields))\n            fields = h.fields();\n        else if (!Array.isArray(fields))\n            fields = [fields];\n        return fields;\n    }\n\n    function props(fields, key, val) {\n        tidyFields(fields).forEach(field => {\n            h.getCtxs(field).forEach(ctx => {\n                $set(ctx.rule, key, val);\n                h.$render.clearCache(ctx);\n            });\n        })\n    }\n\n    function allSubForm() {\n        const subs = h.subForm;\n        return Object.keys(subs).reduce((initial, k) => {\n            const sub = subs[k];\n            if (!sub) return initial;\n            if (Array.isArray(sub))\n                initial.push(...sub);\n            else\n                initial.push(sub);\n            return initial;\n        }, []);\n    }\n\n    const api = {\n        get config() {\n            return h.options\n        },\n        get options() {\n            return h.options\n        },\n        get form() {\n            return h.form\n        },\n        get rule() {\n            return h.rules\n        },\n        get parent() {\n            return h.vm.$pfc && h.vm.$pfc.$f\n        },\n        get children() {\n            return allSubForm();\n        },\n        formData(fields) {\n            return tidyFields(fields).reduce((initial, id) => {\n                const ctx = h.getFieldCtx(id);\n                if (!ctx) return initial;\n                initial[ctx.field] = copy(ctx.rule.value);\n                return initial;\n            }, copy(h.appendData));\n        },\n        getValue(field) {\n            const ctx = h.getFieldCtx(field);\n            if (!ctx) return;\n            return copy(ctx.rule.value);\n        },\n        coverValue(formData) {\n            h.deferSyncValue(() => {\n                api.fields().forEach(key => {\n                    const ctxs = h.fieldCtx[key];\n                    if (!ctxs) return h.appendData[key] = formData[key];\n                    const flag = hasProperty(formData, key);\n                    ctxs.forEach(ctx => {\n                        ctx.rule.value = flag ? formData[key] : undefined;\n                    })\n                });\n            })\n        },\n        setValue(field) {\n            let formData = field;\n            if (arguments.length >= 2)\n                formData = {[field]: arguments[1]};\n            h.deferSyncValue(() => {\n                Object.keys(formData).forEach(key => {\n                    const ctxs = h.fieldCtx[key];\n                    if (!ctxs) return h.appendData[key] = formData[key];\n                    ctxs.forEach(ctx => {\n                        ctx.rule.value = formData[key];\n                    });\n                });\n            })\n        },\n        removeField(field) {\n            const ctx = h.getCtx(field);\n            h.deferSyncValue(() => {\n                h.getCtxs(field).forEach(ctx => {\n                    ctx.rm();\n                });\n            }, true);\n            return ctx ? ctx.origin : undefined;\n        },\n        removeRule(rule) {\n            const ctx = rule && byCtx(rule);\n            if (!ctx) return;\n            ctx.rm();\n            return ctx.origin;\n        },\n        destroy: () => {\n            h.vm.$el.parentNode && h.vm.$el.parentNode.removeChild(h.vm.$el);\n            h.vm.$destroy();\n        },\n        fields: () => h.fields(),\n        append: (rule, after, child) => {\n            let index = h.sort.length - 1, rules;\n            const ctx = h.getCtx(after);\n\n            if (ctx) {\n                if (child) {\n                    rules = ctx.rule.children;\n                    index = ctx.rule.children.length - 1;\n                } else {\n                    index = ctx.root.indexOf(ctx.origin);\n                    rules = ctx.root;\n                }\n            } else rules = h.rules;\n            rules.splice(index + 1, 0, rule);\n        },\n        prepend: (rule, after, child) => {\n            let index = 0, rules;\n            const ctx = h.getCtx(after);\n\n            if (ctx) {\n                if (child) {\n                    rules = ctx.rule.children;\n                } else {\n                    index = ctx.root.indexOf(ctx.origin);\n                    rules = ctx.root;\n                }\n            } else rules = h.rules;\n            rules.splice(index, 0, rule);\n        },\n        hidden(state, fields) {\n            props(fields, 'hidden', !!state);\n            h.refresh();\n        },\n        hiddenStatus(id) {\n            const ctx = h.getCtx(id);\n            if (!ctx) return;\n            return !!ctx.rule.hidden;\n        },\n        display(state, fields) {\n            props(fields, 'display', !!state);\n            h.refresh();\n        },\n        displayStatus(id) {\n            const ctx = h.getCtx(id);\n            if (!ctx) return;\n            return !!ctx.rule.display;\n        },\n        disabled(disabled, fields) {\n            tidyFields(fields).forEach((field) => {\n                h.getCtxs(field).forEach(ctx => {\n                    $set(ctx.rule.props, 'disabled', !!disabled);\n                });\n            });\n            h.refresh();\n        },\n        all(origin) {\n            return Object.keys(h.ctxs).map(k => {\n                const ctx = h.ctxs[k];\n                return origin ? ctx.origin : ctx.rule;\n            });\n        },\n        model(origin) {\n            return h.fields().reduce((initial, key) => {\n                const ctx = h.fieldCtx[key][0];\n                initial[key] = origin ? ctx.origin : ctx.rule;\n                return initial;\n            }, {});\n        },\n        component(origin) {\n            return Object.keys(h.nameCtx).reduce((initial, key) => {\n                const ctx = h.nameCtx[key].map(ctx => origin ? ctx.origin : ctx.rule);\n                initial[key] = ctx.length === 1 ? ctx[0] : ctx;\n                return initial;\n            }, {});\n        },\n        bind() {\n            return api.form;\n        },\n        reload: (rules) => {\n            h.reloadRule(rules)\n        },\n        updateOptions(options) {\n            h.fc.updateOptions(options);\n            api.refresh();\n        },\n        onSubmit(fn) {\n            api.updateOptions({onSubmit: fn});\n        },\n        sync: (field) => {\n            if (Array.isArray(field)) {\n                field.forEach(v => api.sync(v));\n                return;\n            }\n            let ctxs = is.Object(field) ? byCtx(field) : h.getCtxs(field);\n            if (!ctxs) {\n                return;\n            }\n            ctxs = Array.isArray(ctxs) ? ctxs : [ctxs];\n            ctxs.forEach(ctx => {\n                if (!ctx.deleted) {\n                    const subForm = h.subForm[ctx.id];\n                    if (subForm) {\n                        if (Array.isArray(subForm)) {\n                            subForm.forEach(form => {\n                                form.refresh();\n                            })\n                        } else if (subForm) {\n                            subForm.refresh();\n                        }\n                    }\n                    //ctx.updateKey(true);\n                    h.$render.clearCache(ctx);\n                }\n            });\n            h.refresh();\n        },\n        refresh: () => {\n            allSubForm().forEach(sub => {\n                sub.refresh();\n            });\n            h.$render.clearCacheAll();\n            h.refresh();\n        },\n        refreshOptions() {\n            h.$manager.updateOptions(h.options);\n            api.refresh();\n        },\n        hideForm: (hide) => {\n            $set(h.vm, 'isShow', !hide);\n        },\n        changeStatus: () => {\n            return h.changeStatus;\n        },\n        clearChangeStatus: () => {\n            h.changeStatus = false;\n        },\n        updateRule(id, rule) {\n            h.getCtxs(id).forEach(ctx => {\n                extend(ctx.rule, rule);\n            });\n        },\n        updateRules(rules) {\n            Object.keys(rules).forEach(id => {\n                api.updateRule(id, rules[id]);\n            })\n        },\n        mergeRule: (id, rule) => {\n            h.getCtxs(id).forEach(ctx => {\n                mergeRule(ctx.rule, rule);\n            });\n        },\n        mergeRules(rules) {\n            Object.keys(rules).forEach(id => {\n                api.mergeRule(id, rules[id]);\n            })\n        },\n        getRule: (id, origin) => {\n            const ctx = h.getCtx(id);\n            if (ctx) {\n                return origin ? ctx.origin : ctx.rule;\n            }\n        },\n        updateValidate(id, validate, merge) {\n            if (merge) {\n                api.mergeRule(id, {validate})\n            } else {\n                props(id, 'validate', validate);\n            }\n        },\n        updateValidates(validates, merge) {\n            Object.keys(validates).forEach(id => {\n                api.updateValidate(id, validates[id], merge);\n            })\n        },\n        refreshValidate() {\n            h.vm.validate = {};\n            api.refresh();\n        },\n        resetFields(fields) {\n            tidyFields(fields).forEach(field => {\n                h.getCtxs(field).forEach(ctx => {\n                    h.$render.clearCache(ctx);\n                    ctx.rule.value = copy(ctx.defaultValue);\n                    h.refreshControl(ctx);\n                });\n            });\n        },\n        method(id, name) {\n            const el = api.el(id);\n            if (!el || !el[name])\n                throw new Error(format('err', `${name}方法不存在`));\n            return (...args) => {\n                return el[name](...args);\n            }\n        },\n        exec(id, name, ...args) {\n            return invoke(() => api.method(id, name)(...args));\n        },\n        toJson(space) {\n            return toJson(api.rule, space);\n        },\n        trigger(id, event, ...args) {\n            const el = api.el(id);\n            el && el.$emit(event, ...args);\n        },\n        el(id) {\n            const ctx = h.getCtx(id);\n            if (ctx) return ctx.el || h.vm.$refs[ctx.ref];\n        },\n        closeModal: (id) => {\n            const el = api.el(id);\n            el && el.$emit && el.$emit('close-modal');\n        },\n        getSubForm(field) {\n            const ctx = h.getCtx(field);\n            return ctx ? h.subForm[ctx.id] : undefined;\n        },\n        nextTick(fn) {\n            h.bus.$once('next-tick', fn);\n            h.refresh();\n        },\n        nextRefresh(fn) {\n            h.nextRefresh();\n            fn && invoke(fn);\n        },\n        emit(name, ...args) {\n            h.vm.$emit(name, ...args);\n        },\n        helper: {\n            tidyFields, props\n        }\n    };\n\n    ['on', 'once', 'off', 'set'].forEach(n => {\n        api[n] = function (...args) {\n            h.vm[`$${n}`](...args);\n        }\n    });\n\n    api.changeValue = api.changeField = api.setValue;\n\n    return api;\n}\n","import extend from '@form-create/utils/lib/extend';\n\nexport default function useCache(Render) {\n    extend(Render.prototype, {\n        initCache() {\n            this.clearCacheAll();\n        },\n        clearCache(ctx) {\n            if (!this.cache[ctx.id]) {\n                ctx.parent && this.clearCache(ctx.parent);\n                return;\n            }\n            if (this.cache[ctx.id].use === true || this.cache[ctx.id].parent) {\n                this.$handle.refresh();\n            }\n            const parent = this.cache[ctx.id].parent;\n            this.cache[ctx.id] = null;\n            parent && this.clearCache(parent);\n        },\n        clearCacheAll() {\n            this.cache = {};\n        },\n        setCache(ctx, vnode, parent) {\n            this.cache[ctx.id] = {\n                vnode,\n                use: false,\n                parent,\n                slot: ctx.rule.slot\n            };\n        },\n        getCache(ctx) {\n            const cache = this.cache[ctx.id];\n            cache.use = true;\n            return cache.vnode;\n        }\n    })\n\n}\n","export default function toCase(str) {\n    const to = str.replace(/(-[a-z])/g, function (v) {\n        return v.replace('-', '').toLocaleUpperCase();\n    });\n\n    return lower(to);\n}\n\nexport function lower(str) {\n    return str.replace(str[0], str[0].toLowerCase());\n}\n","import extend from '@form-create/utils/lib/extend';\nimport mergeProps from '@form-create/utils/lib/mergeprops';\nimport is, {hasProperty} from '@form-create/utils/lib/type';\nimport {_vue as Vue} from '../frame';\nimport {tip} from '@form-create/utils/lib/console';\nimport {invoke, mergeRule} from '../frame/util';\nimport toCase, {lower} from '@form-create/utils/lib/tocase';\nimport {$set, deepSet, toLine} from '@form-create/utils';\n\nexport default function useRender(Render) {\n    extend(Render.prototype, {\n        initRender() {\n            this.tempList = {};\n            this.clearOrgChildren();\n        },\n        initOrgChildren() {\n            const ctxs = this.$handle.ctxs;\n            this.orgChildren = Object.keys(ctxs).reduce((initial, id) => {\n                if (ctxs[id].parser.loadChildren !== false) {\n                    const children = ctxs[id].rule.children;\n                    initial[id] = is.trueArray(children) ? [...children] : [];\n                }\n\n                return initial;\n            }, {});\n\n        },\n        clearOrgChildren() {\n            this.orgChildren = {};\n        },\n        render() {\n            if (!this.vm.isShow) {\n                return;\n            }\n            this.$h = this.vm.$createElement;\n            this.$manager.beforeRender();\n\n            let vn;\n\n            const make = () => this.renderList();\n            make.renderSlot = slot => this.renderList(slot);\n            make.renderName = name => this.renderId(name);\n            make.renderField = field => this.renderId(field, 'field');\n\n            if (this.vm.$scopedSlots.container) {\n                vn = [this.vm.$scopedSlots.container(make)];\n            } else {\n                vn = make();\n            }\n            return this.$manager.render(vn);\n        },\n        renderList(slot) {\n            return this.sort.map((id) => {\n                return slot ? this.renderSlot(this.$handle.ctxs[id], slot) : this.renderCtx(this.$handle.ctxs[id]);\n            }).filter((val) => val !== undefined);\n        },\n        makeVm(rule) {\n            const vm = rule.vm;\n            if (!vm)\n                return new Vue;\n            else if (is.Function(vm))\n                return invoke(() => rule.vm(this.$handle.getInjectData(rule)));\n            else if (!vm._isVue)\n                return new Vue(vm);\n            return vm;\n        },\n        mergeGlobal(ctx) {\n            const g = this.$handle.options.global;\n            if (!g) return;\n            //todo 缓存配置,更新 option 更新\n            if (!ctx.cacheConfig)\n                ctx.cacheConfig = g[ctx.originType] || g[ctx.type] || g[ctx.trueType] || {};\n            ctx.prop = mergeRule({}, [g['*'], ctx.cacheConfig, ctx.prop]);\n        },\n        setOptions(ctx) {\n            if (ctx.prop.optionsTo && ctx.prop.options) {\n                deepSet(ctx.prop, ctx.prop.optionsTo, ctx.prop.options);\n            }\n        },\n        deepSet(ctx) {\n            const deep = ctx.rule.deep;\n            deep && Object.keys(deep).sort((a, b) => a.length < b.length ? -1 : 1).forEach(str => {\n                deepSet(ctx.prop, str, deep[str]);\n            });\n        },\n        setTempProps(vm, ctx) {\n            if (!vm.$props) return;\n\n            const {prop} = ctx;\n            const keys = Object.keys(vm.$props);\n            const inject = this.injectProp(ctx);\n            const injectKeys = Object.keys(inject);\n\n            keys.forEach(key => {\n                if (hasProperty(prop.props, key))\n                    vm.$props[key] = prop.props[key];\n                else if (injectKeys.indexOf(key) > -1) vm.$props[key] = inject[key];\n            });\n\n            const key = (vm.$options.model && vm.$options.model.prop) || 'value';\n            if (keys.indexOf(key) > -1) {\n                vm.$props[key] = prop.value;\n            }\n        },\n        renderTemp(ctx) {\n            if (!Vue.compile) {\n                tip('当前使用的Vue构建版本不支持compile,无法使用template功能');\n                return [];\n            }\n            const rule = ctx.prop;\n            const {id, key} = ctx;\n\n            if (!this.tempList[id]) {\n                if (!ctx.el) {\n                    ctx.el = this.makeVm(rule);\n                    this.vm.$nextTick(() => ctx.parser.mounted(ctx));\n                }\n\n                let vm = ctx.el;\n                if (ctx.input)\n                    vm.$on((vm.$options.model && vm.$options.model.event) || 'input', (value) => {\n                        this.onInput(ctx, value);\n                    });\n\n                this.tempList[id] = {\n                    vm,\n                    template: Vue.compile(rule.template)\n                };\n            }\n\n            const {vm, template} = this.tempList[id];\n\n            this.setTempProps(vm, ctx);\n\n            const vn = template.render.call(vm);\n\n            if (is.Undef(vn.data)) vn.data = {};\n            vn.key = key;\n            vn.data.ref = ctx.ref;\n            vn.data.key = key;\n            return vn;\n        },\n        parseSide(side) {\n            return is.Object(side) ? mergeRule({}, side) : side;\n        },\n        renderSides(vn, ctx, temp) {\n            const prop = ctx[temp ? 'rule' : 'prop'];\n            return [this.renderRule(this.parseSide(prop.prefix)), vn, this.renderRule(this.parseSide(prop.suffix))];\n        },\n        renderSlot(ctx, slot) {\n            return ctx.rule.slot === slot ? this.renderCtx(ctx) : undefined;\n        },\n        renderId(name, type) {\n            const ctxs = this.$handle[type === 'field' ? 'fieldCtx' : 'nameCtx'][name]\n            return ctxs ? ctxs.map(ctx => this.renderCtx(ctx, ctx.parent)) : undefined;\n        },\n        renderCtx(ctx, parent) {\n            if (ctx.type === 'hidden') return;\n            const rule = ctx.rule;\n            const preview = this.options.preview || false;\n            if ((!this.cache[ctx.id]) || this.cache[ctx.id].slot !== rule.slot) {\n                let vn;\n                let cacheFlag = true;\n                const _type = ctx.trueType;\n                const none = !(is.Undef(rule.display) || !!rule.display);\n                if (_type === 'template' && !rule.template) {\n                    vn = this.renderSides(this.renderChildren(ctx), ctx, true);\n                    if (none) {\n                        this.display(vn);\n                    }\n                    vn = this.item(ctx, vn);\n                } else if (_type === 'fcFragment') {\n                    vn = this.renderChildren(ctx);\n                } else {\n                    ctx.initProp();\n                    this.mergeGlobal(ctx);\n                    this.$manager.tidyRule(ctx);\n                    this.deepSet(ctx);\n                    this.setOptions(ctx);\n                    this.ctxProp(ctx);\n                    let prop = ctx.prop;\n                    prop.props.formCreateInject = this.injectProp(ctx);\n\n                    if (prop.hidden) {\n                        this.setCache(ctx, undefined, parent);\n                        return;\n                    }\n\n                    if (_type === 'template' && prop.template) {\n                        vn = this.renderTemp(ctx);\n                        cacheFlag = false;\n                    } else {\n                        let children = [];\n                        if (ctx.parser.renderChildren) {\n                            children = ctx.parser.renderChildren(ctx);\n                        } else if (ctx.parser.loadChildren !== false) {\n                            children = this.renderChildren(ctx);\n                        }\n                        const slot = 'type-' + toLine(ctx.type);\n                        if (this.vm.$scopedSlots[slot]) {\n                            vn = this.vm.$scopedSlots[slot]({\n                                rule,\n                                prop,\n                                preview,\n                                children,\n                                api: this.$handle.api,\n                                model: prop.model || {}\n                            });\n                        } else {\n                            vn = preview ? ctx.parser.preview(children, ctx) : ctx.parser.render(children, ctx);\n                        }\n                    }\n                    vn = this.renderSides(vn, ctx);\n                    if ((!(!ctx.input && is.Undef(prop.native))) && prop.native !== true) {\n                        vn = this.$manager.makeWrap(ctx, vn);\n                    }\n                    if (none) {\n                        vn = this.display(vn);\n                    }\n                    vn = this.item(ctx, vn)\n                }\n                if (cacheFlag) {\n                    this.setCache(ctx, vn, parent);\n                }\n                return vn;\n            }\n\n            return this.getCache(ctx);\n        },\n        display(vn) {\n            if (Array.isArray(vn)) {\n                const data = [];\n                vn.forEach(v => {\n                    if (Array.isArray(v)) return this.display(v);\n                    if (this.none(v)) data.push(v);\n                })\n                return data;\n            } else {\n                return this.none(vn);\n            }\n        },\n        none(vn) {\n            if (vn && vn.data) {\n                if (Array.isArray(vn.data.style)) {\n                    vn.data.style.push({display: 'none'});\n                } else {\n                    vn.data.style = [vn.data.style, {display: 'none'}];\n                }\n                return vn;\n            }\n        },\n        item(ctx, vn) {\n            return this.$h('fcFragment', {\n                slot: ctx.rule.slot,\n                key: ctx.key,\n            }, [vn]);\n        },\n        injectProp(ctx) {\n            if (!this.vm.ctxInject[ctx.id]) {\n                $set(this.vm.ctxInject, ctx.id, {\n                    api: this.$handle.api,\n                    form: this.fc.create,\n                    subForm: subForm => {\n                        this.$handle.addSubForm(ctx, subForm);\n                    },\n                    options: [],\n                    children: [],\n                    prop: {},\n                    preview: false,\n                    field: ctx.field,\n                    rule: ctx.rule,\n                });\n            }\n            const inject = this.vm.ctxInject[ctx.id];\n            extend(inject, {\n                preview: this.options.preview || false,\n                options: ctx.prop.options,\n                children: ctx.rule.children,\n                prop: (function () {\n                    const temp = {...ctx.prop};\n                    temp.on = temp.on ? {...temp.on} : {};\n                    delete temp.model;\n                    return temp;\n                }()),\n            });\n            return inject;\n        },\n        ctxProp(ctx, custom) {\n            const {ref, key, rule} = ctx;\n            this.$manager.mergeProp(ctx, custom);\n            ctx.parser.mergeProp(ctx, custom);\n            const props = [\n                {\n                    ref: ref,\n                    key: rule.key || `${key}fc`,\n                    slot: undefined,\n                    on: {\n                        'hook:mounted': () => {\n                            this.onMounted(ctx);\n                        },\n                        'fc.sub-form': (subForm) => {\n                            this.$handle.addSubForm(ctx, subForm);\n                        }\n                    },\n                }\n            ]\n\n            if (!custom && ctx.input) {\n                props.push({\n                    model: {\n                        value: this.$handle.getFormData(ctx),\n                        callback: (value) => {\n                            this.onInput(ctx, value);\n                        },\n                        expression: `formData.${ctx.id}`\n                    },\n                })\n            }\n            mergeProps(props, ctx.prop);\n            return ctx.prop;\n        },\n        onMounted(ctx) {\n            ctx.el = this.vm.$refs[ctx.ref];\n            if (ctx.el) {\n                (ctx.el.$el || ctx.el).__rule__ = ctx.rule;\n            }\n            ctx.parser.mounted(ctx);\n            this.$handle.effect(ctx, 'mounted');\n        },\n        onInput(ctx, value) {\n            this.$handle.onInput(ctx, value);\n        },\n        renderChildren(ctx) {\n            const {children} = ctx.rule, orgChildren = this.orgChildren[ctx.id];\n\n            const isRm = child => {\n                return !is.String(child) && child.__fc__ && !this.$handle.ctxs[child.__fc__.id];\n            }\n\n            if (!is.trueArray(children) && orgChildren) {\n                this.$handle.deferSyncValue(() => {\n                    orgChildren.forEach(child => {\n                        if (!child) return;\n                        if (isRm(child)) {\n                            this.$handle.rmCtx(child.__fc__);\n                        }\n                    });\n                });\n                this.orgChildren[ctx.id] = [];\n                return [];\n            }\n\n            orgChildren && this.$handle.deferSyncValue(() => {\n                orgChildren.forEach(child => {\n                    if (!child) return;\n                    if (children.indexOf(child) === -1 && isRm(child)) {\n                        this.$handle.rmCtx(child.__fc__);\n                    }\n                });\n            });\n\n            return children.map(child => {\n                if (!child) return;\n                if (is.String(child)) return child;\n                if (child.__fc__) {\n                    return this.renderCtx(child.__fc__, ctx);\n                }\n                if (child.type) {\n                    this.vm.$nextTick(() => {\n                        this.$handle.loadChildren(children, ctx);\n                        this.$handle.refresh();\n                    });\n                }\n            });\n\n        },\n        defaultRender(ctx, children) {\n            const prop = ctx.prop;\n            if (this.vNode[ctx.type])\n                return this.vNode[ctx.type](prop, children);\n            if (this.vNode[ctx.originType])\n                return this.vNode[ctx.originType](prop, children);\n            return this.vNode.make(lower(ctx.originType), prop, children);\n        },\n        renderRule(rule, children, origin) {\n            if (!rule) return undefined;\n            if (is.String(rule)) return rule;\n\n            let type;\n            if (origin) {\n                type = rule.type;\n            } else {\n                type = rule.is;\n                if (rule.type) {\n                    type = toCase(rule.type);\n                    const alias = this.vNode.aliasMap[type];\n                    if (alias) type = toCase(alias);\n                }\n            }\n\n            if (!type) return undefined;\n            let data = [[children]];\n            if (is.trueArray(rule.children)) {\n                data.push(rule.children.map(v => this.renderRule(v)));\n            }\n            return this.$h(type, {...rule}, data);\n        }\n    })\n}\n","import useCache from './cache';\nimport useRender from './render';\nimport extend from '@form-create/utils/lib/extend';\nimport {funcProxy} from '../frame/util';\n\nexport default function Render(handle) {\n    extend(this, {\n        $handle: handle,\n        fc: handle.fc,\n        vm: handle.vm,\n        $manager: handle.$manager,\n        vNode: new handle.fc.CreateNode(handle.vm),\n    });\n\n    funcProxy(this, {\n        options() {\n            return handle.options;\n        },\n        sort() {\n            return handle.sort;\n        }\n    })\n\n    this.initCache();\n    this.initRender();\n}\n\nuseCache(Render);\nuseRender(Render)\n","import extend from '@form-create/utils/lib/extend';\nimport is from '@form-create/utils/lib/type';\nimport toLine from '@form-create/utils/lib/toline';\nimport {parseFn} from '../frame/util';\n\n\nexport default function useInject(Handler) {\n    extend(Handler.prototype, {\n        parseInjectEvent(rule, on) {\n            const inject = rule.inject || this.options.injectEvent;\n            return this.parseEventLst(rule, on, inject);\n        },\n        parseEventLst(rule, data, inject, deep) {\n            Object.keys(data).forEach(k => {\n                const fn = this.parseEvent(rule, data[k], inject, deep);\n                if (fn) {\n                    data[k] = fn;\n                }\n            });\n            return data;\n        },\n        parseEvent(rule, fn, inject, deep) {\n            if (is.Function(fn) && ((inject !== false && !is.Undef(inject)) || fn.__inject)) {\n                return this.inject(rule, fn, inject)\n            } else if (!deep && Array.isArray(fn) && fn[0] && (is.String(fn[0]) || is.Function(fn[0]))) {\n                return this.parseEventLst(rule, fn, inject, true);\n            } else if (is.String(fn)) {\n                const val = parseFn(fn);\n                if (val && fn !== val) {\n                    return val.__inject ? this.parseEvent(rule, val, inject, true) : val;\n                }\n            }\n        },\n        parseEmit(ctx, on) {\n            let event = {}, rule = ctx.rule, {emitPrefix, field, name, inject} = rule;\n            let emit = rule[on ? 'emit' : 'nativeEmit'] || [];\n            if (is.trueArray(emit)) {\n                let emitKey = emitPrefix || field || name;\n                if (emitKey) {\n                    if (!on) emitKey = `native-${emitKey}`;\n                    emit.forEach(eventName => {\n                        if (!eventName) return;\n                        let eventInject;\n                        if (is.Object(eventName)) {\n                            eventInject = eventName.inject;\n                            eventName = eventName.name;\n                        }\n                        const fieldKey = toLine(`${emitKey}-${eventName}`);\n                        const fn = (...arg) => {\n                            this.vm.$emit(fieldKey, ...arg);\n                            this.vm.$emit('emit-event', fieldKey, ...arg);\n                        };\n                        fn.__emit = true;\n\n                        if (!eventInject && inject === false) {\n                            event[eventName] = fn;\n                        } else {\n                            let _inject = eventInject || inject || this.options.injectEvent;\n                            event[eventName] = is.Undef(_inject) ? fn : this.inject(rule, fn, _inject);\n                        }\n                    });\n                }\n\n            }\n            ctx.computed[on ? 'on' : 'nativeOn'] = event;\n            return event;\n        },\n        getInjectData(self, inject) {\n            const {option, rule} = this.vm.$options.propsData;\n            return {\n                api: this.api,\n                $f: this.api,\n                rule,\n                self: self.__origin__,\n                option,\n                inject\n            };\n        },\n        inject(self, _fn, inject) {\n            if (_fn.__origin) {\n                if (this.watching && !this.loading)\n                    return _fn;\n                _fn = _fn.__origin;\n            }\n\n            const h = this;\n\n            const fn = function (...args) {\n                const data = h.getInjectData(self, inject);\n                data.args = [...args];\n                args.unshift(data);\n                return _fn.apply(this, args);\n            };\n            fn.__origin = _fn;\n            fn.__json = _fn.__json;\n            return fn;\n        },\n    })\n}\n","import extend from '@form-create/utils/lib/extend';\nimport is from '@form-create/utils/lib/type';\n\nconst EVENT = ['hook:updated', 'hook:mounted'];\n\nexport default function usePage(Handler) {\n    extend(Handler.prototype, {\n        usePage() {\n            const page = this.options.page;\n            if (!page) return;\n            let first = 25;\n            let limit = getLimit(this.rules);\n            if (is.Object(page)) {\n                if (page.first) first = parseInt(page.first, 10) || first;\n                if (page.limit) limit = parseInt(page.limit, 10) || limit;\n            }\n            extend(this, {\n                first,\n                limit,\n                pageEnd: this.rules.length <= first,\n            })\n\n            this.bus.$on('page-end', () => this.vm.$emit('page-end', this.api));\n            this.pageLoad();\n        },\n        pageLoad() {\n            const pageFn = () => {\n                if (this.pageEnd) {\n                    this.vm.$off(EVENT, pageFn);\n                    this.bus.$emit('page-end');\n                } else {\n                    this.first += this.limit;\n                    this.pageEnd = this.rules.length <= this.first;\n                    this.loadRule();\n                    this.refresh();\n                }\n            }\n            this.vm.$on(EVENT, pageFn);\n        },\n    })\n}\n\n\nfunction getLimit(rules) {\n    return rules.length < 31 ? 31 : Math.ceil(rules.length / 3);\n}\n","import extend from '@form-create/utils/lib/extend';\n\n\nexport default function useRender(Handler) {\n    extend(Handler.prototype, {\n        clearNextTick() {\n            this.nextTick && clearTimeout(this.nextTick);\n            this.nextTick = null;\n        },\n        bindNextTick(fn) {\n            this.clearNextTick();\n            this.nextTick = setTimeout(() => {\n                fn()\n                this.nextTick = null;\n            }, 10);\n        },\n        render() {\n            // console.warn('%c render', 'color:green');\n            ++this.loadedId;\n\n            if (this.vm.unique > 0)\n                return this.$render.render();\n            else {\n                this.vm.unique = 1;\n                return [];\n            }\n        },\n    });\n}\n","import unique from '@form-create/utils/lib/unique';\nimport toCase from '@form-create/utils/lib/tocase';\nimport extend from '@form-create/utils/lib/extend';\nimport mergeProps from '@form-create/utils/lib/mergeprops';\nimport {enumerable} from '../frame/util';\nimport {deepCopy} from '@form-create/utils/lib/deepextend';\n\nfunction bind(ctx) {\n    Object.defineProperties(ctx.origin, {\n        __fc__: enumerable(ctx, true)\n    });\n}\n\nexport default function RuleContext(handle, rule) {\n    const id = unique();\n\n    extend(this, {\n        id,\n        ref: id,\n        wrapRef: id + 'fi',\n        rule,\n        origin: rule.__origin__ || rule,\n        name: rule.name,\n\n        watch: [],\n        linkOn: [],\n        root: [],\n        ctrlRule: [],\n        parent: null,\n        cacheConfig: null,\n        prop: {...rule},\n        computed: {},\n        payload: {},\n        input: !!rule.field,\n        el: undefined,\n        defaultValue: rule.field ? deepCopy(rule.value) : undefined,\n        field: rule.field || undefined,\n    })\n\n    this.updateType();\n    this.updateKey();\n    bind(this);\n    this.update(handle, true);\n}\n\nextend(RuleContext.prototype, {\n    effectData(name) {\n        if (!this.payload[name]) {\n            this.payload[name] = {};\n        }\n        return this.payload[name];\n    },\n    clearEffectData(name) {\n        delete this.payload[name]\n    },\n    updateKey(flag) {\n        this.key = unique();\n        flag && this.parent && this.parent.updateKey(flag);\n    },\n    updateType() {\n        this.originType = this.rule.type;\n        this.type = toCase(this.rule.type);\n    },\n    setParser(parser) {\n        this.parser = parser;\n        parser.init(this);\n    },\n    initProp() {\n        const rule = {...this.rule};\n        delete rule.children;\n        this.prop = mergeProps([rule, ...Object.keys(this.payload).map(k => this.payload[k]), this.computed]);\n    },\n    check(handle) {\n        return this.vm === handle.vm\n    },\n    unwatch() {\n        this.watch.forEach(un => un());\n        this.watch = [];\n    },\n    unlink() {\n        this.linkOn.forEach(un => un());\n        this.linkOn = [];\n    },\n    link() {\n        this.unlink();\n        this.$handle.appendLink(this);\n    },\n    watchTo() {\n        this.$handle.watchCtx(this);\n    },\n    delete() {\n        const undef = void 0;\n        this.unwatch();\n        this.unlink();\n        this.rmCtrl();\n        extend(this, {\n            deleted: true,\n            prop: {...this.rule},\n            computed: {},\n            el: undef,\n            $handle: undef,\n            $render: undef,\n            $api: undef,\n            vm: undef,\n            vNode: undef,\n            parent: null,\n            cacheConfig: null,\n        })\n    },\n    rmCtrl() {\n        this.ctrlRule.forEach(ctrl => ctrl.__fc__ && ctrl.__fc__.rm());\n        this.ctrlRule = [];\n    },\n    rm() {\n        const _rm = () => {\n            let index = this.root.indexOf(this.origin);\n            if (index > -1) {\n                this.root.splice(index, 1);\n                this.$handle && this.$handle.refresh();\n            }\n        }\n        if (this.deleted) {\n            _rm();\n            return;\n        }\n        this.$handle.noWatch(() => {\n            this.$handle.deferSyncValue(() => {\n                this.rmCtrl();\n                _rm();\n                this.$handle.rmCtx(this);\n                extend(this, {\n                    root: []\n                });\n            }, this.input);\n        });\n    },\n    update(handle, init) {\n        extend(this, {\n            deleted: false,\n            $handle: handle,\n            $render: handle.$render,\n            $api: handle.api,\n            vm: handle.vm,\n            trueType: handle.getType(this.originType),\n            vNode: handle.$render.vNode,\n            updated: false,\n        });\n        !init && this.unwatch();\n        this.watchTo();\n        this.link();\n    }\n})\n","import extend from '@form-create/utils/lib/extend';\nimport {byCtx, copyRule, enumerable, getRule, invoke, parseFn} from '../frame/util';\nimport is, {hasProperty} from '@form-create/utils/lib/type';\nimport {err} from '@form-create/utils/lib/console';\nimport {baseRule} from '../factory/creator';\nimport RuleContext from '../factory/context';\nimport mergeProps from '@form-create/utils/lib/mergeprops';\n\nexport default function useLoader(Handler) {\n    extend(Handler.prototype, {\n        nextRefresh(fn) {\n            const id = this.loadedId;\n            this.vm.$nextTick(() => {\n                id === this.loadedId && (fn ? fn() : this.refresh());\n            });\n        },\n        parseRule(_rule) {\n            const rule = getRule(_rule);\n\n            Object.defineProperties(rule, {\n                __origin__: enumerable(_rule, true)\n            });\n\n            fullRule(rule);\n            this.appendValue(rule);\n\n            rule.options = Array.isArray(rule.options) ? rule.options : [];\n\n            [rule, rule['prefix'], rule['suffix']].forEach(item => {\n                if (!item) {\n                    return;\n                }\n                this.loadFn(item, rule);\n            });\n            this.loadCtrl(rule);\n            if (rule.update) {\n                rule.update = parseFn(rule.update);\n            }\n            return rule;\n        },\n        loadFn(item, rule) {\n            ['on', 'props', 'nativeOn', 'deep'].forEach(k => {\n                item[k] && this.parseInjectEvent(rule, item[k]);\n            });\n        },\n        loadCtrl(rule) {\n            rule.control && rule.control.forEach(ctrl => {\n                if (ctrl.handle) {\n                    ctrl.handle = parseFn(ctrl.handle)\n                }\n            })\n        },\n        syncProp(ctx) {\n            const rule = ctx.rule;\n            is.trueArray(rule.sync) && mergeProps([{\n                on: rule.sync.reduce((pre, prop) => {\n                    pre[`update:${prop}`] = (val) => {\n                        rule.props[prop] = val;\n                        this.vm.$emit('sync', prop, val, rule, this.fapi);\n                    }\n                    return pre\n                }, {})\n            }], ctx.computed)\n        },\n        loadRule() {\n            // console.warn('%c load', 'color:blue');\n            this.cycleLoad = false;\n            this.loading = true;\n            if (this.pageEnd) {\n                this.bus.$emit('load-start');\n            }\n            this.deferSyncValue(() => {\n                this._loadRule(this.rules);\n                this.loading = false;\n                if (this.cycleLoad && this.pageEnd) {\n                    return this.loadRule();\n                }\n                if (this.pageEnd) {\n                    this.bus.$emit('load-end');\n                }\n                this.vm._renderRule();\n                this.$render.initOrgChildren();\n                this.syncForm();\n            });\n        },\n        loadChildren(children, parent) {\n            this.cycleLoad = false;\n            this.loading = true;\n            this.bus.$emit('load-start');\n            this._loadRule(children, parent);\n            this.loading = false;\n            if (this.cycleLoad) {\n                return this.loadRule();\n            } else {\n                this.bus.$emit('load-end');\n                this.syncForm();\n            }\n            this.$render.clearCache(parent);\n        },\n        _loadRule(rules, parent) {\n\n            const preIndex = (i) => {\n                let pre = rules[i - 1];\n                if (!pre || !pre.__fc__) {\n                    return i > 0 ? preIndex(i - 1) : -1;\n                }\n                let index = this.sort.indexOf(pre.__fc__.id);\n                return index > -1 ? index : preIndex(i - 1);\n            }\n\n            const loadChildren = (children, parent) => {\n                if (is.trueArray(children)) {\n                    this._loadRule(children, parent);\n                }\n            };\n\n            rules.map((_rule, index) => {\n                if (parent && (is.String(_rule) || is.Undef(_rule))) return;\n                if (!this.pageEnd && !parent && index >= this.first) return;\n\n                if (!is.Object(_rule) || !getRule(_rule).type)\n                    return err('未定义生成规则的 type 字段', _rule);\n\n                if (_rule.__fc__ && _rule.__fc__.root === rules && this.ctxs[_rule.__fc__.id]) {\n                    loadChildren(_rule.__fc__.rule.children, _rule.__fc__);\n                    return _rule.__fc__;\n                }\n\n                let rule = getRule(_rule);\n\n                const isRepeat = () => {\n                    return !!(rule.field && this.fieldCtx[rule.field] && this.fieldCtx[rule.field][0] !== _rule.__fc__)\n                }\n\n                this.ruleEffect(rule, 'init', {repeat: isRepeat()});\n\n                if (isRepeat()) {\n                    this.vm.$emit('repeat-field', _rule, this.api);\n                }\n\n                let ctx;\n                let isCopy = false;\n                let isInit = !!_rule.__fc__;\n                if (isInit) {\n                    ctx = _rule.__fc__;\n                    const check = !ctx.check(this);\n                    if (ctx.deleted) {\n                        if (check) {\n                            if (isCtrl(ctx)) {\n                                return;\n                            }\n                            ctx.update(this);\n                        }\n                    } else {\n                        if (check) {\n                            if (isCtrl(ctx)) {\n                                return;\n                            }\n                            rules[index] = _rule = _rule._clone ? _rule._clone() : copyRule(_rule);\n                            ctx = null;\n                            isCopy = true;\n                        }\n                    }\n                }\n                if (!ctx) {\n                    ctx = new RuleContext(this, this.parseRule(_rule));\n                    this.bindParser(ctx);\n                } else {\n                    if (ctx.originType !== ctx.rule.type) {\n                        ctx.updateType();\n                        this.bindParser(ctx);\n                    }\n                    this.appendValue(ctx.rule);\n                }\n                [false, true].forEach(b => this.parseEmit(ctx, b));\n                this.syncProp(ctx);\n                ctx.parent = parent || null;\n                ctx.root = rules;\n                this.setCtx(ctx);\n\n                !isCopy && !isInit && this.effect(ctx, 'load');\n\n                ctx.parser.loadChildren === false || loadChildren(ctx.rule.children, ctx);\n\n                if (!parent) {\n                    const _preIndex = preIndex(index);\n                    if (_preIndex > -1 || !index) {\n                        this.sort.splice(_preIndex + 1, 0, ctx.id);\n                    } else {\n                        this.sort.push(ctx.id);\n                    }\n                }\n\n                const r = ctx.rule;\n                if (!ctx.updated) {\n                    ctx.updated = true;\n                    if (is.Function(r.update)) {\n                        this.bus.$once('load-end', () => {\n                            this.refreshUpdate(ctx, r.value);\n                        });\n                    }\n                    this.effect(ctx, 'loaded');\n                }\n\n                if (ctx.input)\n                    Object.defineProperty(r, 'value', this.valueHandle(ctx));\n                if (this.refreshControl(ctx)) this.cycleLoad = true;\n                return ctx;\n            });\n        },\n        refreshControl(ctx) {\n            return ctx.input && ctx.rule.control && this.useCtrl(ctx);\n        },\n        useCtrl(ctx) {\n            const controls = getCtrl(ctx), validate = [], api = this.api;\n            if (!controls.length) return false;\n\n            for (let i = 0; i < controls.length; i++) {\n                const control = controls[i], handleFn = control.handle || (val => val === control.value);\n                if (!is.trueArray(control.rule)) continue;\n                const data = {\n                    ...control,\n                    valid: invoke(() => handleFn(ctx.rule.value, api)),\n                    ctrl: findCtrl(ctx, control.rule),\n                    isHidden: is.String(control.rule[0]),\n                };\n                if ((data.valid && data.ctrl) || (!data.valid && !data.ctrl && !data.isHidden)) continue;\n                validate.push(data);\n            }\n            if (!validate.length) return false;\n\n            let flag = false;\n            this.deferSyncValue(() => {\n                validate.reverse().forEach(({isHidden, valid, rule, prepend, append, child, ctrl}) => {\n                    if (isHidden) {\n                        valid ? ctx.ctrlRule.push({\n                            __ctrl: true,\n                            children: rule,\n                            valid\n                        })\n                            : ctx.ctrlRule.splice(ctx.ctrlRule.indexOf(ctrl), 1);\n                        this.vm.$nextTick(() => {\n                            this.api.hidden(!valid, rule);\n                        });\n                        return;\n                    }\n                    if (valid) {\n                        flag = true;\n                        const ruleCon = {\n                            type: 'fcFragment',\n                            native: true,\n                            __ctrl: true,\n                            children: rule,\n                        }\n                        ctx.ctrlRule.push(ruleCon);\n                        this.bus.$once('load-start', () => {\n                            // this.cycleLoad = true;\n                            if (prepend) {\n                                api.prepend(ruleCon, prepend, child)\n                            } else if (append || child) {\n                                api.append(ruleCon, append || ctx.id, child)\n                            } else {\n                                ctx.root.splice(ctx.root.indexOf(ctx.origin) + 1, 0, ruleCon);\n                            }\n                        });\n                    } else {\n                        ctx.ctrlRule.splice(ctx.ctrlRule.indexOf(ctrl), 1);\n                        const ctrlCtx = byCtx(ctrl);\n                        ctrlCtx && ctrlCtx.rm();\n                    }\n                });\n            });\n            this.vm.$emit('control', ctx.origin, this.api);\n            this.effect(ctx, 'control');\n            return flag;\n        },\n        reloadRule(rules) {\n            return this._reloadRule(rules);\n        },\n        _reloadRule(rules) {\n            // console.warn('%c reload', 'color:red');\n            if (!rules) rules = this.rules;\n\n            const ctxs = {...this.ctxs};\n\n            this.clearNextTick();\n            this.$render.clearOrgChildren();\n            this.initData(rules);\n            this.fc.rules = rules;\n\n            this.bus.$once('load-end', () => {\n                Object.keys(ctxs).filter(id => this.ctxs[id] === undefined)\n                    .forEach(id => this.rmCtx(ctxs[id]));\n                this.$render.clearCacheAll();\n            });\n            this.reloading = true;\n            this.loadRule();\n            this.reloading = false;\n            this.refresh();\n\n            this.bus.$off('next-tick', this.nextReload);\n            this.bus.$once('next-tick', this.nextReload);\n            this.vm.$emit('update', this.api);\n        },\n        //todo 组件生成全部通过 alias\n        refresh() {\n            this.vm._refresh();\n        },\n    });\n}\n\nfunction fullRule(rule) {\n    const def = baseRule();\n\n    Object.keys(def).forEach(k => {\n        if (!hasProperty(rule, k)) rule[k] = def[k];\n    });\n    return rule;\n}\n\nfunction getCtrl(ctx) {\n    const control = ctx.rule.control || [];\n    if (is.Object(control)) return [control];\n    else return control;\n}\n\nfunction findCtrl(ctx, rule) {\n    for (let i = 0; i < ctx.ctrlRule.length; i++) {\n        const ctrl = ctx.ctrlRule[i];\n        if (ctrl.children === rule)\n            return ctrl;\n    }\n}\n\nfunction isCtrl(ctx) {\n    return !!ctx.rule.__ctrl;\n}\n","import extend from '@form-create/utils/lib/extend';\nimport {$set} from '@form-create/utils/lib';\nimport is, {hasProperty} from '@form-create/utils/lib/type';\nimport {invoke} from '../frame/util';\nimport toArray from '@form-create/utils/lib/toarray';\n\nexport default function useInput(Handler) {\n    extend(Handler.prototype, {\n        getValue(ctx) {\n            if (is.Undef(ctx.cacheValue)) {\n                ctx.cacheValue = ctx.parser.toValue(this.getFormData(ctx), ctx);\n            }\n            return ctx.cacheValue;\n        },\n        setValue(ctx, value, formValue, setFlag) {\n            if (ctx.deleted) return;\n            ctx.cacheValue = value;\n            this.changeStatus = true;\n            this.nextRefresh();\n            this.$render.clearCache(ctx);\n            this.setFormData(ctx, formValue);\n            this.syncValue();\n            this.valueChange(ctx, value);\n            this.vm.$emit('change', ctx.field, value, ctx.origin, this.api, setFlag);\n            this.effect(ctx, 'value');\n        },\n        onInput(ctx, value) {\n            let val;\n            if (ctx.input && (this.isQuote(ctx, val = ctx.parser.toValue(value, ctx)) || this.isChange(ctx, val))) {\n                this.setValue(ctx, val, value);\n            }\n        },\n        setFormData(ctx, value) {\n            $set(this.formData, ctx.id, value);\n        },\n        getFormData(ctx) {\n            return this.formData[ctx.id];\n        },\n        validate() {\n            toEmpty(this.vm.validate);\n            this.fields().forEach(id => {\n                this.fieldCtx[id].forEach(ctx => {\n                    this.vm.validate[ctx.id] = toArray(ctx.rule.validate);\n                });\n            });\n            return this.vm.validate;\n        },\n        syncForm() {\n            toEmpty(this.form);\n            Object.defineProperties(this.form, this.fields().reduce((initial, field) => {\n                const ctx = this.getFieldCtx(field);\n                const handle = this.valueHandle(ctx);\n                handle.configurable = true;\n                initial[field] = handle;\n                return initial;\n            }, Object.keys(this.appendData).reduce((initial, field) => {\n                initial[field] = {\n                    enumerable: true,\n                    configurable: true,\n                    get: () => {\n                        return this.appendData[field];\n                    },\n                    set: (val) => {\n                        this.appendData[field] = val;\n                    }\n                }\n                return initial;\n            }, {})));\n            this.syncValue();\n        },\n        valueHandle(ctx) {\n            return {\n                enumerable: true,\n                get: () => {\n                    return this.getValue(ctx);\n                },\n                set: (value) => {\n                    if (this.isChange(ctx, value)) {\n                        this.setValue(ctx, value, ctx.parser.toFormValue(value, ctx), true);\n                    }\n                }\n            };\n        },\n        appendValue(rule) {\n            if (!rule.field || !hasProperty(this.appendData, rule.field)) return;\n            rule.value = this.appendData[rule.field];\n            delete this.appendData[rule.field];\n        },\n        addSubForm(ctx, subForm) {\n            if (ctx.input) {\n                this.subForm[ctx.id] = subForm;\n            }\n        },\n        deferSyncValue(fn, sync) {\n            if (!this.deferSyncFn) {\n                this.deferSyncFn = fn;\n            }\n            if (!this.deferSyncFn.sync) {\n                this.deferSyncFn.sync = sync;\n            }\n            invoke(fn);\n            if (this.deferSyncFn === fn) {\n                this.deferSyncFn = null;\n                if (fn.sync) {\n                    this.syncValue();\n                }\n            }\n        },\n        syncValue() {\n            if (this.deferSyncFn) {\n                return this.deferSyncFn.sync = true;\n            }\n            this.vm._updateValue({...this.form});\n        },\n        isChange(ctx, value) {\n            return JSON.stringify(ctx.rule.value) !== JSON.stringify(value);\n        },\n        isQuote(ctx, value) {\n            return (value === ctx.rule.value || is.Object(value) || Array.isArray(value) || is.Function(value));\n        },\n        refreshUpdate(ctx, val) {\n            if (is.Function(ctx.rule.update)) {\n                const state = invoke(() => ctx.rule.update(val, ctx.origin, this.api));\n                if (state === undefined) return;\n                ctx.rule.hidden = state === true;\n            }\n        },\n        valueChange(ctx, val) {\n            this.refreshRule(ctx, val);\n            this.bus.$emit('change-' + ctx.field, val);\n        },\n        refreshRule(ctx, val) {\n            if (this.refreshControl(ctx)) {\n                this.$render.clearCacheAll();\n                this.loadRule();\n                this.vm.$emit('update', this.api);\n                this.refresh();\n            }\n            this.refreshUpdate(ctx, val);\n        },\n        appendLink(ctx) {\n            const link = ctx.rule.link;\n            is.trueArray(link) && link.forEach(field => {\n                const fn = () => this.refreshRule(ctx, ctx.rule.value);\n\n                this.bus.$on('change-' + field, fn);\n                ctx.linkOn.push(() => this.bus.$off('change-' + field, fn));\n            });\n        },\n        fields() {\n            return Object.keys(this.fieldCtx);\n        },\n    });\n}\n\nfunction toEmpty(obj) {\n    Object.keys(obj).forEach(k => delete obj[k]);\n}\n","const BaseParser = {\n    init(ctx) {\n    },\n    toFormValue(value, ctx) {\n        return value\n    },\n    toValue(formValue, ctx) {\n        return formValue;\n    },\n    mounted(ctx) {\n    },\n    render(children, ctx) {\n        return ctx.$render.defaultRender(ctx, children);\n    },\n    preview(children, ctx) {\n        return ctx.$render.defaultRender(ctx, children);\n    },\n    mergeProp(ctx) {\n    }\n}\n\nexport default BaseParser;\n","import extend from '@form-create/utils/lib/extend';\nimport toCase from '@form-create/utils/lib/tocase';\nimport BaseParser from '../factory/parser';\nimport {$del} from '@form-create/utils/lib';\nimport is from '@form-create/utils/lib/type';\nimport {invoke} from '../frame/util';\n\n\nexport default function useContext(Handler) {\n    extend(Handler.prototype, {\n        getCtx(id) {\n            return this.getFieldCtx(id) || this.getNameCtx(id)[0] || this.ctxs[id];\n        },\n        getCtxs(id) {\n            return this.fieldCtx[id] || this.nameCtx[id] || (this.ctxs[id] ? [this.ctxs[id]] : []);\n        },\n        setIdCtx(ctx, key, type) {\n            const field = `${type}Ctx`;\n            if (!this[field][key]) {\n                this[field][key] = [ctx];\n            } else {\n                this[field][key].push(ctx);\n            }\n        },\n        rmIdCtx(ctx, key, type) {\n            const field = `${type}Ctx`;\n            const lst = this[field][key];\n            if (!lst) return false;\n            const flag = lst.splice(lst.indexOf(ctx) >>> 0, 1).length > 0;\n            if (!lst.length) {\n                delete this[field][key];\n            }\n            return flag;\n        },\n        getFieldCtx(field) {\n            return (this.fieldCtx[field] || [])[0];\n        },\n        getNameCtx(name) {\n            return this.nameCtx[name] || [];\n        },\n        setCtx(ctx) {\n            let {id, field, name, rule} = ctx;\n            this.ctxs[id] = ctx;\n            name && this.setIdCtx(ctx, name, 'name');\n            if (!ctx.input) return;\n            this.setIdCtx(ctx, field, 'field');\n            this.setFormData(ctx, ctx.parser.toFormValue(rule.value, ctx));\n            if (this.isMounted && !this.reloading) {\n                this.vm.$emit('change', ctx.field, rule.value, ctx.origin, this.api);\n            }\n        },\n        getParser(ctx) {\n            const list = this.fc.parsers;\n            return list[ctx.originType] || list[toCase(ctx.type)] || list[ctx.trueType] || BaseParser;\n        },\n        bindParser(ctx) {\n            ctx.setParser(this.getParser(ctx));\n        },\n        getType(alias) {\n            const map = this.fc.CreateNode.aliasMap;\n            const type = map[alias] || map[toCase(alias)] || alias;\n            return toCase(type);\n        },\n        noWatch(fn) {\n            if (!this.noWatchFn) {\n                this.noWatchFn = fn;\n            }\n            invoke(fn);\n            if (this.noWatchFn === fn) {\n                this.noWatchFn = null;\n            }\n        },\n        watchCtx(ctx) {\n            const vm = this.vm;\n            const none = ['field', 'value', 'vm', 'template', 'name', 'config', 'control', 'inject', 'sync', 'payload', 'optionsTo', 'update'];\n            Object.keys(ctx.rule).filter(k => none.indexOf(k) === -1).forEach((key) => {\n                const flag = key === 'children';\n                ctx.watch.push(vm.$watch(() => ctx.rule[key], (n, o) => {\n                    if (this.loading || this.noWatchFn || this.reloading) return;\n                    if (flag && ctx.parser.loadChildren === false) {\n                        this.$render.clearCache(ctx);\n                        this.nextRefresh();\n                        return;\n                    }\n                    this.watching = true;\n                    // if (key === 'hidden')\n                    //     ctx.updateKey(true);\n                    // else\n                    if (key === 'link') {\n                        ctx.link();\n                        return;\n                    } else if (['props', 'on', 'nativeOn', 'deep'].indexOf(key) > -1) {\n                        this.parseInjectEvent(ctx.rule, n || {});\n                        if (key === 'props' && ctx.input) {\n                            this.setFormData(ctx, ctx.parser.toFormValue(ctx.rule.value, ctx));\n                        }\n                    } else if (['emit', 'nativeEmit'].indexOf(key) > -1)\n                        this.parseEmit(ctx, key === 'emit');\n                    else if (['prefix', 'suffix'].indexOf(key) > -1)\n                        n && this.loadFn(n, ctx.rule);\n                    else if (key === 'type') {\n                        ctx.updateType();\n                        this.bindParser(ctx);\n                    } else if (key === 'children') {\n                        const flag = is.trueArray(n);\n                        this.deferSyncValue(() => {\n                            if (n !== o) {\n                                this.rmSub(o);\n                                this.$render.initOrgChildren();\n                            }\n                            flag && this.loadChildren(n, ctx);\n                            this.vm.$emit('update', this.api);\n                        });\n                    }\n                    this.$render.clearCache(ctx);\n                    this.watching = false;\n                }, {deep: !flag, sync: flag}));\n            });\n            this.watchEffect(ctx);\n        },\n        rmSub(sub) {\n            is.trueArray(sub) && sub.forEach(r => {\n                r && r.__fc__ && this.rmCtx(r.__fc__);\n            })\n        },\n        rmCtx(ctx) {\n            if (ctx.deleted) return;\n            const {id, field, input, name} = ctx;\n            if (ctx.input) {\n                Object.defineProperty(ctx.rule, 'value', {\n                    value: ctx.rule.value,\n                    writable: true\n                });\n            }\n\n            $del(this.ctxs, id);\n            $del(this.$render.tempList, id);\n            $del(this.$render.orgChildren, id);\n            $del(this.vm.ctxInject, id);\n            $del(this.formData, id);\n            $del(this.subForm, id);\n            $del(ctx, 'cacheValue');\n\n            input && this.rmIdCtx(ctx, field, 'field');\n            name && this.rmIdCtx(ctx, name, 'name');\n\n            this.deferSyncValue(() => {\n                if (!this.reloading) {\n                    if (ctx.parser.loadChildren !== false) {\n                        if (is.trueArray(ctx.rule.children)) {\n                            ctx.rule.children.forEach(h => h.__fc__ && this.rmCtx(h.__fc__));\n                        }\n                    }\n                    if (ctx.root === this.rules) {\n                        this.vm._renderRule();\n                    }\n                }\n            }, input);\n\n            const index = this.sort.indexOf(id);\n            if (index > -1) {\n                this.sort.splice(index, 1);\n            }\n\n            this.$render.clearCache(ctx);\n            ctx.delete();\n            this.effect(ctx, 'deleted');\n            input && !this.fieldCtx[field] && this.vm.$emit('removeField', field, ctx.rule, this.api);\n            ctx.rule.__ctrl || this.vm.$emit('removeRule', ctx.rule, this.api);\n            return ctx;\n        },\n    })\n}\n","import extend from '@form-create/utils/lib/extend';\nimport is from '@form-create/utils/lib/type';\nimport {invoke} from '../frame/util';\n\n\nexport default function useLifecycle(Handler) {\n    extend(Handler.prototype, {\n        mounted() {\n            const _mounted = () => {\n                this.isMounted = true;\n                this.lifecycle('mounted');\n            }\n            if (this.pageEnd) {\n                _mounted();\n            } else {\n                this.bus.$once('page-end', _mounted);\n            }\n        },\n        lifecycle(name) {\n            const fn = this.options[name];\n            is.Function(fn) && invoke(() => fn(this.api));\n            this.vm.$emit(name, this.api);\n        },\n    })\n}\n","import extend from '@form-create/utils/lib/extend';\nimport is, {hasProperty} from '@form-create/utils/lib/type';\nimport mergeProps from '@form-create/utils/lib/mergeprops';\n\n\nexport default function useEffect(Handler) {\n    extend(Handler.prototype, {\n        useProvider() {\n            const ps = this.fc.providers;\n            Object.keys(ps).forEach(k => {\n                const prop = ps[k];\n                prop._c = getComponent(prop);\n                this.onEffect(prop);\n                this.providers[k] = prop;\n            });\n        },\n        onEffect(provider) {\n            const used = [];\n            (provider._c || ['*']).forEach(name => {\n                const type = name === '*' ? '*' : this.getType(name);\n                if (used.indexOf(type) > -1) return;\n                used.push(type);\n                this.bus.$on(`p:${provider.name}:${type}:${provider.input ? 1 : 0}`, (event, args) => {\n                    provider[event] && provider[event](...args);\n                });\n            });\n            provider._used = used;\n        },\n        watchEffect(ctx) {\n            const vm = this.vm;\n            Object.keys(ctx.rule.effect || {}).forEach(k => {\n                ctx.watch.push(vm.$watch(() => ctx.rule.effect[k], (n) => {\n                    this.effect(ctx, 'watch', {[k]: n});\n                }, {deep: true}));\n            });\n        },\n        ruleEffect(rule, event, append) {\n            this.emitEffect({\n                rule,\n                input: !!rule.field,\n                type: this.getType(rule.type)\n            }, event, append);\n        },\n        effect(ctx, event, custom) {\n            this.emitEffect({\n                rule: ctx.rule,\n                input: ctx.input,\n                type: ctx.trueType,\n                ctx,\n                custom\n            }, event);\n        },\n        getEffect(rule, name) {\n            if (hasProperty(rule, 'effect') && hasProperty(rule.effect, name))\n                return rule.effect[name];\n            else\n                return undefined;\n        },\n        emitEffect({ctx, rule, input, type, custom}, event, append) {\n            if (!type || type === 'fcFragment') return;\n            const effect = custom ? custom : (rule.effect || {});\n            Object.keys(effect).forEach(attr => {\n                const p = this.providers[attr];\n                if (!p || (p.input && !input)) return;\n                let _type;\n                if (!p._c) {\n                    _type = '*';\n                } else if (p._used.indexOf(type) > -1) {\n                    _type = type;\n                } else {\n                    return;\n                }\n                const data = {value: effect[attr], getValue: () => this.getEffect(rule, attr), ...(append || {})};\n                if (ctx) {\n                    data.getProp = () => ctx.effectData(attr);\n                    data.clearProp = () => ctx.clearEffectData(attr);\n                    data.mergeProp = (prop) => mergeProps([prop], data.getProp());\n                }\n                this.bus.$emit(`p:${attr}:${_type}:${p.input ? 1 : 0}`, event, [data, rule, this.api]);\n            });\n        }\n    });\n}\n\nfunction unique(arr) {\n    return arr.filter(function (item, index, arr) {\n        return arr.indexOf(item, 0) === index;\n    });\n}\n\nfunction getComponent(p) {\n    const c = p.components;\n    if (Array.isArray(c)) return unique(c.filter(v => v !== '*'));\n    else if (is.String(c)) return [c];\n    else return false;\n}\n","import Api from '../frame/api';\nimport Render from '../render';\nimport extend from '@form-create/utils/lib/extend';\nimport {funcProxy} from '../frame/util';\nimport useInject from './inject';\nimport usePage from './page';\nimport useRender from './render';\nimport useLoader from './loader';\nimport useInput from './input';\nimport useContext from './context';\nimport useLifecycle from './lifecycle';\nimport useEffect from './effect';\n\n\nexport default function Handler(fc) {\n    extend(this, {\n        fc,\n        vm: fc.vm,\n        watching: false,\n        loading: false,\n        reloading: false,\n        noWatchFn: null,\n        deferSyncFn: null,\n        isMounted: false,\n        formData: {},\n        subForm: {},\n        form: {},\n        appendData: {},\n        providers: {},\n        cycleLoad: null,\n        loadedId: 1,\n        nextTick: null,\n        changeStatus: false,\n        pageEnd: true,\n        nextReload: () => {\n            this.lifecycle('reload');\n        }\n    });\n\n    funcProxy(this, {\n        options() {\n            return fc.options;\n        },\n        bus() {\n            return fc.bus;\n        },\n    })\n\n    this.initData(fc.rules);\n\n    this.$manager = new fc.manager(this);\n    this.$render = new Render(this);\n    this.api = fc.extendApi(Api(this), this);\n}\n\nextend(Handler.prototype, {\n    initData(rules) {\n        extend(this, {\n            ctxs: {},\n            fieldCtx: {},\n            nameCtx: {},\n            sort: [],\n            rules,\n        });\n    },\n    init() {\n        this.appendData = {...this.fc.options.formData || {}, ...this.vm.value || {}, ...this.appendData};\n        this.useProvider();\n        this.usePage();\n        this.loadRule();\n        this.$manager.__init();\n        this.vm.$set(this.vm, 'formData', this.formData);\n    },\n})\n\nuseInject(Handler);\nusePage(Handler);\nuseRender(Handler);\nuseLoader(Handler);\nuseInput(Handler);\nuseContext(Handler);\nuseLifecycle(Handler);\nuseEffect(Handler);\n","// https://github.com/ElemeFE/element/blob/dev/packages/upload/src/ajax.js\n\nfunction getError(action, option, xhr) {\n    const msg = `fail to ${action} ${xhr.status}'`;\n    const err = new Error(msg);\n    err.status = xhr.status;\n    err.url = action;\n    return err;\n}\n\nfunction getBody(xhr) {\n    const text = xhr.responseText || xhr.response;\n    if (!text) {\n        return text;\n    }\n\n    try {\n        return JSON.parse(text);\n    } catch (e) {\n        return text;\n    }\n}\n\nexport default function fetch(option) {\n    if (typeof XMLHttpRequest === 'undefined') {\n        return;\n    }\n\n    const xhr = new XMLHttpRequest();\n    const action = option.action;\n\n    xhr.onerror = function error(e) {\n        option.onError(e);\n    };\n\n    xhr.onload = function onload() {\n        if (xhr.status < 200 || xhr.status >= 300) {\n            return option.onError(getError(action, option, xhr), getBody(xhr));\n        }\n\n        option.onSuccess(getBody(xhr));\n    };\n\n    xhr.open(option.method || 'get', action, true);\n\n    let formData;\n    if (option.data) {\n        if ((option.dataType || '').toLowerCase() !== 'json') {\n            formData = new FormData();\n            Object.keys(option.data).map(key => {\n                formData.append(key, option.data[key]);\n            });\n        } else {\n            formData = JSON.stringify(option.data);\n            xhr.setRequestHeader('content-type', 'application/json');\n        }\n    }\n\n\n    if (option.withCredentials && 'withCredentials' in xhr) {\n        xhr.withCredentials = true;\n    }\n\n    const headers = option.headers || {};\n\n    Object.keys(headers).forEach(item => {\n        if (headers[item] !== null) {\n            xhr.setRequestHeader(item, headers[item]);\n        }\n    });\n    xhr.send(formData);\n}\n","const NAME = 'fcFragment';\n\nexport default {\n    name: NAME,\n    functional: true,\n    props: ['vnode'],\n    render(h, ctx) {\n        return ctx.props.vnode ? ctx.props.vnode : ctx.children\n    }\n}\n","import toLine from '@form-create/utils/lib/toline';\nimport is from '@form-create/utils/lib/type';\nimport toString from '@form-create/utils/lib/tostring';\nimport extend from '@form-create/utils/lib/extend';\nimport Vue from 'vue';\n\nfunction parseProp(prop) {\n    if (is.String(prop))\n        return {domProps: {innerHTML: prop}};\n    return prop;\n}\n\nexport function CreateNodeFactory() {\n\n    const aliasMap = {};\n\n    function CreateNode(vm) {\n        vm && this.setVm(vm);\n    }\n\n    extend(CreateNode.prototype, {\n        setVm(vm) {\n            this.vm = vm;\n            this.$h = vm.$createElement;\n        },\n        make(tag, data, children) {\n            if (Vue.config.isReservedTag(tag) && data.nativeOn) delete data.nativeOn;\n            let Node = this.$h(tag, parseProp(data), children || []);\n            Node.context = this.vm;\n            return Node;\n        },\n        aliasMap\n    });\n\n    extend(CreateNode, {\n        aliasMap,\n        alias(alias, name) {\n            aliasMap[alias] = name;\n        },\n        use(nodes) {\n            Object.keys(nodes).forEach((k) => {\n                const line = toLine(k);\n                const lower = toString(k).toLocaleLowerCase();\n                const v = nodes[k];\n                [k, line, lower].forEach(n => {\n                    CreateNode.alias(k, v);\n                    CreateNode.prototype[n] = function (data, children) {\n                        return this.make(v, data, children);\n                    };\n                });\n            });\n        }\n    })\n\n    return CreateNode;\n}\n","import mergeProps from '@form-create/utils/lib/mergeprops';\nimport unique from '@form-create/utils/lib/unique';\nimport extend from '@form-create/utils/lib/extend';\n\nexport function createManager(proto) {\n    class CustomManager extends Manager {\n    }\n\n    Object.assign(CustomManager.prototype, proto);\n    return CustomManager;\n}\n\nexport default function Manager(handler) {\n    extend(this, {\n        $handle: handler,\n        vm: handler.vm,\n        options: {},\n        ref: 'fcForm',\n        mergeOptionsRule: {\n            normal: ['form', 'row', 'info', 'submitBtn', 'resetBtn']\n        }\n    });\n    this.updateKey();\n    this.init();\n}\n\nextend(Manager.prototype, {\n    __init() {\n        this.$render = this.$handle.$render;\n        this.$r = (...args) => this.$render.renderRule(...args);\n    },\n    updateKey() {\n        this.key = unique();\n    },\n    //TODO interface\n    init() {\n    },\n    update() {\n    },\n    beforeRender() {\n    },\n    form() {\n        return this.vm.$refs[this.ref];\n    },\n    mergeOptions(args, opt) {\n        return mergeProps(args.map(v => this.tidyOptions(v)), opt, this.mergeOptionsRule);\n    },\n    updateOptions(options) {\n        this.options = this.mergeOptions([options], this.getDefaultOptions());\n        this.update();\n    },\n    tidyOptions(options) {\n        return options;\n    },\n    tidyRule(ctx) {\n    },\n    mergeProp(ctx) {\n    },\n    getDefaultOptions() {\n        return {};\n    },\n    render(children) {\n    }\n})\n","import {err} from '@form-create/utils/lib/console';\nimport fetch from './fetch';\nimport {invoke} from './util';\nimport is from '@form-create/utils/lib/type';\nimport deepSet from '@form-create/utils/lib/deepset';\n\nconst $fetch = {\n    name: 'fetch',\n    loaded(...args) {\n        run(...args);\n    },\n    watch(inject, rule, api) {\n        if (!run(inject, rule, api)) {\n            inject.clearProp();\n            api.sync(rule);\n        }\n    }\n};\n\nfunction parseOpt(option) {\n    if (is.String(option)) {\n        option = {\n            action: option,\n            to: 'options'\n        }\n    }\n    return option;\n}\n\nfunction run(inject, rule, api) {\n    let option = inject.value;\n    if (is.Function(option)) {\n        option = option(rule, api);\n    }\n    option = parseOpt(option);\n    if (!option || !option.action) {\n        return false;\n    }\n    if (!option.to) {\n        option.to = 'options';\n    }\n    const onError = option.onError;\n\n    const check = () => {\n        if (!inject.getValue()) {\n            inject.clearProp();\n            api.sync(rule);\n            return true;\n        }\n    }\n\n    const set = (val) => {\n        if (val === undefined) {\n            inject.clearProp();\n            api.sync(rule);\n        } else {\n            deepSet(inject.getProp(), option.to, val);\n        }\n    }\n\n    invoke(() => fetch({\n        ...option,\n        onSuccess(body) {\n            if (check()) return;\n            set((option.parse || ((v) => v.data))(body, rule, api))\n            api.sync(rule);\n        },\n        onError(e) {\n            set(undefined)\n            if (check()) return;\n            (onError || ((e) => err(e.message || 'fetch fail ' + option.action)))(e, rule, api);\n        }\n    }));\n\n    return true;\n}\n\nexport default $fetch;\n","import $FormCreate from '../components/formCreate';\nimport Vue from 'vue';\nimport makerFactory from '../factory/maker';\nimport Handle from '../handler';\nimport fetch from './fetch';\nimport {creatorFactory} from '..';\nimport BaseParser from '../factory/parser';\nimport {copyRule, copyRules, mergeGlobal, parseJson, toJson, parseFn} from './util';\nimport fragment from '../components/fragment';\nimport is from '@form-create/utils/lib/type';\nimport toCase from '@form-create/utils/lib/tocase';\nimport extend from '@form-create/utils/lib/extend';\nimport {CreateNodeFactory} from '../factory/node';\nimport {createManager} from '../factory/manager';\nimport {arrayAttrs, keyAttrs, normalAttrs} from './attrs';\nimport {appendProto} from '../factory/creator';\nimport $fetch from './provider';\nimport {deepCopy} from '@form-create/utils/lib/deepextend';\n\nexport let _vue = typeof window !== 'undefined' && window.Vue ? window.Vue : Vue;\n\nfunction _parseProp(name, id) {\n    let prop;\n    if (arguments.length === 2) {\n        prop = arguments[1];\n        id = prop[name];\n    } else {\n        prop = arguments[2];\n    }\n    return {id, prop};\n}\n\nfunction nameProp() {\n    return _parseProp('name', ...arguments);\n}\n\nfunction _getEl(options) {\n    if (!options || !options.el) return window.document.body;\n    return is.Element(options.el)\n        ? options.el\n        : document.querySelector(options.el);\n}\n\nfunction mountForm(rules, option) {\n    const $vm = new _vue({\n        data() {\n            //todo 外部无法修改\n            return {rule: rules, option: option || {}};\n        },\n        render(h) {\n            return h('FormCreate', {ref: 'fc', props: this.$data});\n        }\n    });\n    $vm.$mount();\n    return $vm;\n}\n\nfunction exportAttrs(attrs) {\n    const key = attrs.key || [];\n    const array = attrs.array || [];\n    const normal = attrs.normal || [];\n    keyAttrs.push(...key);\n    arrayAttrs.push(...array);\n    normalAttrs.push(...normal);\n\n    appendProto([...key, ...array, ...normal]);\n}\n\n//todo 表单嵌套\nexport default function FormCreateFactory(config) {\n\n    const components = {\n        [fragment.name]: fragment\n    };\n    const parsers = {};\n    const directives = {};\n    const providers = {\n        fetch: $fetch\n    };\n    const maker = makerFactory();\n    let globalConfig = {global: {}};\n    const data = {};\n    const CreateNode = CreateNodeFactory();\n\n    exportAttrs(config.attrs || {});\n\n    function directive() {\n        const data = nameProp(...arguments);\n        if (data.id && data.prop) directives[data.id] = data.prop;\n    }\n\n    function register() {\n        const data = nameProp(...arguments);\n        if (data.id && data.prop) providers[data.id] = {...data.prop, name: data.id};\n    }\n\n    function componentAlias(alias) {\n        CreateNode.use(alias);\n    }\n\n    function parser() {\n        const data = nameProp(...arguments);\n        if (!data.id || !data.prop) return;\n        const name = toCase(data.id);\n        const parser = data.prop;\n        const base = parser.merge === true ? parsers[name] : undefined;\n        parsers[name] = {...(base || BaseParser), ...parser};\n        maker[name] = creatorFactory(name);\n        parser.maker && extend(maker, parser.maker);\n    }\n\n    function component(id, component) {\n        let name;\n        if (is.String(id)) {\n            name = toCase(id);\n            if (['form-create', 'formcreate'].indexOf(name) > -1) {\n                return $form();\n            } else if (component === undefined) {\n                return components[name];\n            }\n        } else {\n            name = toCase(id.name);\n            component = id;\n        }\n        if (!name || !component) return;\n        components[name] = component;\n        if (component.formCreateParser) parser(name, component.formCreateParser);\n    }\n\n    function $form() {\n        return _vue.extend($FormCreate(FormCreate));\n    }\n\n    function $vnode() {\n        return _vue.extend(fragment);\n    }\n\n    //todo 检查回调函数作用域\n    function use(fn, opt) {\n        if (is.Function(fn.install)) fn.install(create, opt);\n        else if (is.Function(fn)) fn(create, opt);\n        return this;\n    }\n\n    function create(rules, _opt, parent) {\n        let $vm = mountForm(rules, _opt || {});\n        const _this = $vm.$refs.fc.formCreate;\n        _this.$parent = parent;\n        _getEl(_this.options).appendChild($vm.$el);\n        return _this.api();\n    }\n\n    function factory() {\n        return FormCreateFactory(config);\n    }\n\n    function FormCreate(vm, rules, options) {\n        extend(this, {\n            vm,\n            create,\n            manager: createManager(config.manager),\n            parsers,\n            providers,\n            rules: Array.isArray(rules) ? rules : [],\n            prop: {\n                components,\n                directives,\n            },\n            CreateNode,\n            bus: new _vue,\n            unwatch: null,\n            extendApi: config.extendApi || (api => api)\n        })\n        this.init();\n        this.initOptions(options || {});\n    }\n\n    extend(FormCreate.prototype, {\n        init() {\n            const vm = this.vm;\n            const h = new Handle(this);\n            this.$handle = h;\n            vm.$f = h.api;\n            vm.$emit('input', h.api);\n\n            vm.$on('hook:created', () => {\n                if (this.isSub()) {\n                    this.unwatch = vm.$watch(() => vm.$pfc.option, () => {\n                        this.initOptions(this.options);\n                        vm.$f.refresh();\n                    }, {deep: true});\n                    this.initOptions(this.options);\n                }\n                this.created();\n            })\n            vm.$on('hook:mounted', () => {\n                this.mounted();\n            });\n            vm.$on('hook:beforeDestroy', () => {\n                vm.destroyed = true;\n                this.unwatch && this.unwatch();\n                h.reloadRule([]);\n            });\n            vm.$on('hook:updated', () => {\n                h.bindNextTick(() => this.bus.$emit('next-tick', h.api));\n            });\n        },\n        isSub() {\n            return this.vm.$pfc && this.vm.extendOption;\n        },\n        initOptions(options) {\n            this.options = {formData: {}, submitBtn: {}, resetBtn: {}, ...deepCopy(globalConfig)};\n            if (this.isSub()) {\n                this.mergeOptions(this.options, this.vm.$pfc.$f.config || {}, true);\n            }\n            this.updateOptions(options);\n        },\n        mergeOptions(target, opt, parent) {\n            opt = deepCopy(opt);\n            parent && ['page', 'onSubmit', 'mounted', 'reload', 'formData', 'el'].forEach((n) => {\n                delete opt[n];\n            });\n            if (opt.global) {\n                target.global = mergeGlobal(target.global, opt.global);\n                delete opt.global;\n            }\n            this.$handle.$manager.mergeOptions([opt], target);\n            return target;\n        },\n        updateOptions(options) {\n            this.mergeOptions(this.options, options);\n            this.$handle.$manager.updateOptions(this.options);\n        },\n        created() {\n            this.$handle.init();\n            this.vm.$emit('created', this.api());\n        },\n        api() {\n            return this.$handle.api;\n        },\n        render() {\n            return this.$handle.render();\n        },\n        mounted() {\n            this.$handle.mounted();\n        },\n    })\n\n\n    function useAttr(formCreate) {\n        extend(formCreate, {\n            version: config.version,\n            ui: config.ui,\n            data,\n            maker,\n            component,\n            directive,\n            register,\n            $vnode,\n            parser,\n            use,\n            factory,\n            componentAlias,\n            copyRule,\n            copyRules,\n            fetch,\n            $form,\n            parseFn,\n            parseJson,\n            toJson,\n            init(rules, _opt = {}) {\n                let $vm = mountForm(rules, _opt), _this = $vm.$refs.fc.formCreate;\n                return {\n                    mount($el) {\n                        if ($el && is.Element($el))\n                            _this.options.el = $el;\n                        _getEl(_this.options).appendChild($vm.$el);\n                        return _this.api();\n                    },\n                    remove() {\n                        $vm.$el.parentNode && $vm.$el.parentNode.removeChild($vm.$el);\n                    },\n                    destroy() {\n                        this.remove();\n                        $vm.$destroy();\n                    },\n                    $f: _this.api()\n                };\n            }\n        });\n    }\n\n    function useStatic(formCreate) {\n        extend(formCreate, {\n            create,\n            install(Vue, options) {\n                globalConfig = {...globalConfig, ...(options || {})}\n                if (Vue._installedFormCreate === true) return;\n                Vue._installedFormCreate = true;\n                _vue = Vue;\n\n                const $formCreate = function (rules, opt = {}) {\n                    return create(rules, opt, this);\n                };\n\n                useAttr($formCreate);\n\n                Vue.prototype.$formCreate = $formCreate;\n                Vue.component('FormCreate', $form());\n                Vue.component('FcFragment', $vnode());\n            }\n        })\n    }\n\n    useAttr(create);\n    useStatic(create);\n\n    CreateNode.use({fragment: 'fcFragment'});\n\n    if (config.install) create.use(config);\n\n    return create;\n}\n"],"names":["$set","target","field","value","Vue","set","$del","_extends","Object","assign","a","b","c","arguments","length","d","prototype","hasOwnProperty","call","extend","apply","this","NAME","$FormCreate","FormCreate","name","componentName","model","prop","provide","$pfc","inject","props","rule","type","Array","required","option","extendOption","Boolean","api","data","formData","undefined","destroyed","validate","$f","isShow","unique","renderRule","ctxInject","updateValue","render","formCreate","methods","_refresh","_renderRule","_updateValue","JSON","stringify","$emit","watch","handler","n","setValue","deep","initOptions","refresh","every","v","_this","indexOf","$handle","reloadRule","beforeCreate","$options","propsData","keys","forEach","k","_this2","is","arg","toString","Undef","Element","_typeof","nodeType","trueArray","isArray","hasProperty","t","normalMerge","toArrayMerge","functionalMerge","mergeProps","objects","initial","opt","_normalMerge","_toArrayMerge","_functionalMerge","propsMerge","reduce","key","arrA","arrB","event","hook","mergeFn","fn1","fn2","keyAttrs","arrayAttrs","normalAttrs","attrs","format","msg","getRule","tip","console","warn","err","error","logError","e","deepExtend","origin","mode","isArr","clone","nst","_clone","__json","__origin","filter","__ctrl","deepCopy","PREFIX","SUFFIX","$T","$TX","FUNCTION","toJson","obj","space","val","_isVue","__emit","makeFn","fn","eval","parseFn","String","trim","flag","replace","__inject","parseJson","json","parse","enumerable","writable","configurable","copyRule","copyRules","rules","mergeRule","merge","array","normal","Function","mergeGlobal","funcProxy","that","proxy","defineProperties","get","byCtx","__fc__","__origin__","invoke","def","toArray","toLine","line","toLocaleLowerCase","substr","id","uniqueId","Math","random","Number","Date","now","deepSet","idx","to","_data","split","baseRule","on","options","children","hidden","display","creatorFactory","init","title","maker","Creator","appendProto","setProp","constructor","commonMaker","create","make","createTmp","template","vm","makerFactory","factory","copy","Api","h","tidyFields","fields","getCtxs","ctx","$render","clearCache","allSubForm","subs","subForm","sub","push","form","getFieldCtx","appendData","getValue","coverValue","deferSyncValue","ctxs","fieldCtx","removeField","getCtx","rm","removeRule","destroy","$el","parentNode","removeChild","$destroy","append","after","child","index","sort","root","splice","prepend","state","hiddenStatus","displayStatus","disabled","all","map","component","nameCtx","bind","reload","updateOptions","fc","onSubmit","sync","deleted","clearCacheAll","refreshOptions","$manager","hideForm","hide","changeStatus","clearChangeStatus","updateRule","updateRules","mergeRules","updateValidate","updateValidates","validates","refreshValidate","resetFields","defaultValue","refreshControl","method","el","Error","exec","args","trigger","$refs","ref","closeModal","getSubForm","nextTick","bus","$once","nextRefresh","emit","helper","changeValue","changeField","useCache","Render","initCache","cache","use","parent","setCache","vnode","slot","getCache","toCase","str","lower","toLocaleUpperCase","toLowerCase","useRender","initRender","tempList","clearOrgChildren","initOrgChildren","orgChildren","parser","loadChildren","vn","$h","$createElement","beforeRender","renderList","renderSlot","renderName","renderId","renderField","$scopedSlots","container","renderCtx","makeVm","_this3","getInjectData","g","global","cacheConfig","originType","trueType","setOptions","optionsTo","setTempProps","$props","injectProp","injectKeys","renderTemp","compile","$nextTick","mounted","input","$on","_this4","onInput","parseSide","side","renderSides","temp","prefix","suffix","_this5","preview","cacheFlag","_type","none","renderChildren","initProp","tidyRule","ctxProp","formCreateInject","makeWrap","item","_this6","style","_this7","addSubForm","custom","mergeProp","_this8","onMounted","getFormData","callback","expression","__rule__","effect","isRm","_this9","rmCtx","defaultRender","vNode","alias","aliasMap","_this10","handle","CreateNode","useInject","Handler","parseInjectEvent","injectEvent","parseEventLst","parseEvent","parseEmit","emitPrefix","emitKey","eventName","eventInject","fieldKey","_inject","computed","self","_fn","watching","loading","unshift","EVENT","usePage","page","first","limit","getLimit","parseInt","pageEnd","pageLoad","pageFn","$off","loadRule","ceil","clearNextTick","clearTimeout","bindNextTick","setTimeout","loadedId","RuleContext","wrapRef","linkOn","ctrlRule","payload","updateType","updateKey","update","useLoader","parseRule","_rule","fullRule","appendValue","loadFn","loadCtrl","control","ctrl","syncProp","pre","fapi","cycleLoad","_loadRule","syncForm","isRepeat","ruleEffect","repeat","isCopy","isInit","check","isCtrl","bindParser","setCtx","_preIndex","preIndex","i","r","updated","refreshUpdate","defineProperty","valueHandle","useCtrl","controls","getCtrl","handleFn","valid","findCtrl","isHidden","reverse","ruleCon","ctrlCtx","_reloadRule","initData","reloading","nextReload","useInput","cacheValue","toValue","formValue","setFlag","setFormData","syncValue","valueChange","isQuote","isChange","toEmpty","toFormValue","deferSyncFn","refreshRule","appendLink","link","effectData","clearEffectData","setParser","unwatch","un","unlink","watchTo","watchCtx","rmCtrl","$api","_rm","noWatch","getType","BaseParser","useContext","getNameCtx","setIdCtx","rmIdCtx","lst","isMounted","getParser","list","parsers","noWatchFn","$watch","o","rmSub","watchEffect","useLifecycle","_mounted","lifecycle","useEffect","useProvider","ps","providers","_c","getComponent","onEffect","provider","used","_used","emitEffect","getEffect","attr","p","getProp","clearProp","arr","components","manager","extendApi","getError","action","xhr","status","url","getBody","text","responseText","response","fetch","XMLHttpRequest","onerror","onError","onload","onSuccess","open","dataType","FormData","setRequestHeader","withCredentials","headers","send","__init","functional","parseProp","domProps","innerHTML","CreateNodeFactory","setVm","tag","config","isReservedTag","nativeOn","Node","context","nodes","createManager","proto","CustomManager","Manager","mergeOptionsRule","$r","mergeOptions","tidyOptions","getDefaultOptions","$fetch","loaded","run","parseOpt","body","message","_vue","window","_parseProp","nameProp","_getEl","document","querySelector","mountForm","$vm","$data","$mount","exportAttrs","FormCreateFactory","fragment","directives","globalConfig","directive","register","componentAlias","base","$form","formCreateParser","$vnode","install","_opt","$parent","appendChild","useAttr","version","ui","mount","remove","Handle","isSub","created","submitBtn","resetBtn","_installedFormCreate","$formCreate"],"mappings":"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"}